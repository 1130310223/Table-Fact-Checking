[
  "1-26199130-1.html.csv", 
  "free fall have the fewest #viewer;[0, 5]# and be 1 of 3 episode with fewer than #10;[10, 1]# million #viewer;[0, 5]#", 
  1, 
  [
    "diff(1, 3)=-2;less(10, -2);less(10, -2)=False", 
    "diff(1, 3)=-2;eq(10, -2)=False", 
    "diff(1, 3)=-2;greater(10, -2)=True", 
    "add(1, 3)=4;less(10, 4);less(10, 4)=False", 
    "add(1, 3)=4;eq(10, 4)=False", 
    "add(1, 3)=4;greater(10, 4)=True", 
    "less(1, 3);and(within(all_rows, us viewers (million), 10), less(1, 3))=False", 
    "and(within(all_rows, us viewers (million), 10), eq(1, 3))=False", 
    "and(within(all_rows, us viewers (million), 10), greater(1, 3))=False", 
    "less(1, 3);and(within(all_rows, -, 10), less(1, 3))=True", 
    "and(within(all_rows, -, 10), eq(1, 3))=False", 
    "and(within(all_rows, -, 10), greater(1, 3))=False", 
    "less(1, 3);and(less(1, 3), all_greater_eq(all_rows, -, 10))=False", 
    "less(1, 3);and(less(1, 3), all_eq(all_rows, -, 10))=False", 
    "less(1, 3);and(less(1, 3), all_less(all_rows, -, 10))=False", 
    "less(1, 3);and(less(1, 3), all_greater(all_rows, -, 10))=False", 
    "less(1, 3);and(less(1, 3), all_less_eq(all_rows, -, 10))=False", 
    "and(all_greater_eq(all_rows, -, 10), eq(1, 3))=False", 
    "and(all_greater_eq(all_rows, -, 10), greater(1, 3))=False", 
    "and(eq(1, 3), all_eq(all_rows, -, 10))=False", 
    "and(eq(1, 3), all_less(all_rows, -, 10))=False", 
    "and(eq(1, 3), all_greater(all_rows, -, 10))=False", 
    "and(eq(1, 3), all_less_eq(all_rows, -, 10))=False", 
    "and(all_eq(all_rows, -, 10), greater(1, 3))=False", 
    "and(all_less(all_rows, -, 10), greater(1, 3))=False", 
    "and(all_greater(all_rows, -, 10), greater(1, 3))=False", 
    "and(greater(1, 3), all_less_eq(all_rows, -, 10))=False", 
    "less(1, 3);and(less(1, 3), all_greater_eq(argmax(all_rows, us viewers (million)), -, 10))=True", 
    "less(1, 3);and(less(1, 3), all_eq(argmax(all_rows, us viewers (million)), -, 10))=False", 
    "less(1, 3);and(less(1, 3), all_less(argmax(all_rows, us viewers (million)), -, 10))=False", 
    "less(1, 3);and(less(1, 3), all_greater(argmax(all_rows, us viewers (million)), -, 10))=True", 
    "less(1, 3);and(less(1, 3), all_less_eq(argmax(all_rows, us viewers (million)), -, 10))=False", 
    "less(1, 3);and(less(1, 3), all_greater_eq(argmax(all_rows, -), -, 10))=True", 
    "less(1, 3);and(less(1, 3), all_eq(argmax(all_rows, -), -, 10))=False", 
    "less(1, 3);and(less(1, 3), all_less(argmax(all_rows, -), -, 10))=False", 
    "less(1, 3);and(less(1, 3), all_greater(argmax(all_rows, -), -, 10))=True", 
    "less(1, 3);and(less(1, 3), all_less_eq(argmax(all_rows, -), -, 10))=False", 
    "less(1, 3);min(all_rows, -)=1;less(10, 1);and(less(1, 3), less(10, 1))=False", 
    "less(1, 3);min(all_rows, -)=1;and(less(1, 3), eq(10, 1))=False", 
    "less(1, 3);min(all_rows, -)=1;and(less(1, 3), greater(10, 1))=True", 
    "less(1, 3);sum(all_rows, -)=253;less(10, 253);and(less(1, 3), less(10, 253))=True", 
    "less(1, 3);sum(all_rows, -)=253;and(less(1, 3), eq(10, 253))=False", 
    "less(1, 3);sum(all_rows, -)=253;and(less(1, 3), greater(10, 253))=False", 
    "less(1, 3);max(all_rows, -)=22;less(10, 22);and(less(1, 3), less(10, 22))=True", 
    "less(1, 3);max(all_rows, -)=22;and(less(1, 3), eq(10, 22))=False", 
    "less(1, 3);max(all_rows, -)=22;and(less(1, 3), greater(10, 22))=False", 
    "less(1, 3);and(less(1, 3), all_greater_eq(argmin(all_rows, us viewers (million)), -, 10))=True", 
    "less(1, 3);and(less(1, 3), all_eq(argmin(all_rows, us viewers (million)), -, 10))=False", 
    "less(1, 3);and(less(1, 3), all_less(argmin(all_rows, us viewers (million)), -, 10))=False", 
    "less(1, 3);and(less(1, 3), all_greater(argmin(all_rows, us viewers (million)), -, 10))=True", 
    "less(1, 3);and(less(1, 3), all_less_eq(argmin(all_rows, us viewers (million)), -, 10))=False", 
    "less(1, 3);and(less(1, 3), all_greater_eq(argmin(all_rows, -), -, 10))=False", 
    "less(1, 3);and(less(1, 3), all_eq(argmin(all_rows, -), -, 10))=False", 
    "less(1, 3);and(less(1, 3), all_less(argmin(all_rows, -), -, 10))=True", 
    "less(1, 3);and(less(1, 3), all_greater(argmin(all_rows, -), -, 10))=False", 
    "less(1, 3);and(less(1, 3), all_less_eq(argmin(all_rows, -), -, 10))=True", 
    "and(all_greater_eq(argmax(all_rows, us viewers (million)), -, 10), eq(1, 3))=False", 
    "and(all_greater_eq(argmax(all_rows, us viewers (million)), -, 10), greater(1, 3))=False", 
    "and(eq(1, 3), all_eq(argmax(all_rows, us viewers (million)), -, 10))=False", 
    "and(eq(1, 3), all_less(argmax(all_rows, us viewers (million)), -, 10))=False", 
    "and(eq(1, 3), all_greater(argmax(all_rows, us viewers (million)), -, 10))=False", 
    "and(eq(1, 3), all_less_eq(argmax(all_rows, us viewers (million)), -, 10))=False", 
    "and(all_eq(argmax(all_rows, us viewers (million)), -, 10), greater(1, 3))=False", 
    "and(all_less(argmax(all_rows, us viewers (million)), -, 10), greater(1, 3))=False", 
    "and(all_greater(argmax(all_rows, us viewers (million)), -, 10), greater(1, 3))=False", 
    "and(greater(1, 3), all_less_eq(argmax(all_rows, us viewers (million)), -, 10))=False", 
    "and(all_greater_eq(argmax(all_rows, -), -, 10), eq(1, 3))=False", 
    "and(all_greater_eq(argmax(all_rows, -), -, 10), greater(1, 3))=False", 
    "and(eq(1, 3), all_eq(argmax(all_rows, -), -, 10))=False", 
    "and(eq(1, 3), all_less(argmax(all_rows, -), -, 10))=False", 
    "and(eq(1, 3), all_greater(argmax(all_rows, -), -, 10))=False", 
    "and(eq(1, 3), all_less_eq(argmax(all_rows, -), -, 10))=False", 
    "and(all_eq(argmax(all_rows, -), -, 10), greater(1, 3))=False", 
    "and(all_less(argmax(all_rows, -), -, 10), greater(1, 3))=False", 
    "and(all_greater(argmax(all_rows, -), -, 10), greater(1, 3))=False", 
    "and(greater(1, 3), all_less_eq(argmax(all_rows, -), -, 10))=False", 
    "diff(1, 3)=-2;min(filter_greater_eq(all_rows, -, 10), us viewers (million))=9.7;less(-2, 9.7);less(-2, 9.7)=True", 
    "diff(1, 3)=-2;min(filter_greater_eq(all_rows, -, 10), us viewers (million))=9.7;eq(-2, 9.7)=False", 
    "diff(1, 3)=-2;min(filter_greater_eq(all_rows, -, 10), us viewers (million))=9.7;greater(-2, 9.7)=False", 
    "diff(1, 3)=-2;min(filter_greater_eq(all_rows, -, 10), -)=10;less(-2, 10);less(-2, 10)=True", 
    "diff(1, 3)=-2;min(filter_greater_eq(all_rows, -, 10), -)=10;eq(-2, 10)=False", 
    "diff(1, 3)=-2;min(filter_greater_eq(all_rows, -, 10), -)=10;greater(-2, 10)=False", 
    "diff(1, 3)=-2;sum(filter_greater_eq(all_rows, -, 10), us viewers (million))=149.45;less(-2, 149.45);less(-2, 149.45)=True", 
    "diff(1, 3)=-2;sum(filter_greater_eq(all_rows, -, 10), us viewers (million))=149.45;eq(-2, 149.45)=False", 
    "diff(1, 3)=-2;sum(filter_greater_eq(all_rows, -, 10), us viewers (million))=149.45;greater(-2, 149.45)=False", 
    "diff(1, 3)=-2;sum(filter_greater_eq(all_rows, -, 10), -)=208;less(-2, 208);less(-2, 208)=True", 
    "diff(1, 3)=-2;sum(filter_greater_eq(all_rows, -, 10), -)=208;eq(-2, 208)=False", 
    "diff(1, 3)=-2;sum(filter_greater_eq(all_rows, -, 10), -)=208;greater(-2, 208)=False", 
    "diff(1, 3)=-2;max(filter_greater_eq(all_rows, -, 10), us viewers (million))=13.7;less(-2, 13.7);less(-2, 13.7)=True", 
    "diff(1, 3)=-2;max(filter_greater_eq(all_rows, -, 10), us viewers (million))=13.7;eq(-2, 13.7)=False", 
    "diff(1, 3)=-2;max(filter_greater_eq(all_rows, -, 10), us viewers (million))=13.7;greater(-2, 13.7)=False", 
    "diff(1, 3)=-2;max(filter_greater_eq(all_rows, -, 10), -)=22;less(-2, 22);less(-2, 22)=True", 
    "diff(1, 3)=-2;max(filter_greater_eq(all_rows, -, 10), -)=22;eq(-2, 22)=False", 
    "diff(1, 3)=-2;max(filter_greater_eq(all_rows, -, 10), -)=22;greater(-2, 22)=False", 
    "diff(1, 3)=-2;count(filter_greater_eq(all_rows, -, 10))=13;less(-2, 13);less(-2, 13)=True", 
    "diff(1, 3)=-2;count(filter_greater_eq(all_rows, -, 10))=13;eq(-2, 13)=False", 
    "diff(1, 3)=-2;count(filter_greater_eq(all_rows, -, 10))=13;greater(-2, 13)=False", 
    "min(filter_greater_eq(all_rows, -, 10), us viewers (million))=9.7;diff(1, 9.7)=-8.7;less(3, -8.7);less(3, -8.7)=False", 
    "min(filter_greater_eq(all_rows, -, 10), us viewers (million))=9.7;diff(1, 9.7)=-8.7;eq(3, -8.7)=False", 
    "min(filter_greater_eq(all_rows, -, 10), us viewers (million))=9.7;diff(1, 9.7)=-8.7;greater(3, -8.7)=True", 
    "min(filter_greater_eq(all_rows, -, 10), us viewers (million))=9.7;diff(3, 9.7)=-6.7;less(1, -6.7);less(1, -6.7)=False", 
    "min(filter_greater_eq(all_rows, -, 10), us viewers (million))=9.7;diff(3, 9.7)=-6.7;eq(1, -6.7)=False", 
    "min(filter_greater_eq(all_rows, -, 10), us viewers (million))=9.7;diff(3, 9.7)=-6.7;greater(1, -6.7)=True", 
    "min(filter_greater_eq(all_rows, -, 10), us viewers (million))=9.7;add(1, 3)=4;less(9.7, 4);less(9.7, 4)=False", 
    "min(filter_greater_eq(all_rows, -, 10), us viewers (million))=9.7;add(1, 3)=4;eq(9.7, 4)=False", 
    "min(filter_greater_eq(all_rows, -, 10), us viewers (million))=9.7;add(1, 3)=4;greater(9.7, 4)=True", 
    "min(filter_greater_eq(all_rows, -, 10), us viewers (million))=9.7;add(1, 9.7)=10.7;less(3, 10.7);less(3, 10.7)=True", 
    "min(filter_greater_eq(all_rows, -, 10), us viewers (million))=9.7;add(1, 9.7)=10.7;eq(3, 10.7)=False", 
    "min(filter_greater_eq(all_rows, -, 10), us viewers (million))=9.7;add(1, 9.7)=10.7;greater(3, 10.7)=False", 
    "min(filter_greater_eq(all_rows, -, 10), us viewers (million))=9.7;add(3, 9.7)=12.7;less(1, 12.7);less(1, 12.7)=True", 
    "min(filter_greater_eq(all_rows, -, 10), us viewers (million))=9.7;add(3, 9.7)=12.7;eq(1, 12.7)=False", 
    "min(filter_greater_eq(all_rows, -, 10), us viewers (million))=9.7;add(3, 9.7)=12.7;greater(1, 12.7)=False", 
    "min(filter_greater_eq(all_rows, -, 10), -)=10;diff(1, 10)=-9;less(3, -9);less(3, -9)=False", 
    "min(filter_greater_eq(all_rows, -, 10), -)=10;diff(1, 10)=-9;eq(3, -9)=False", 
    "min(filter_greater_eq(all_rows, -, 10), -)=10;diff(1, 10)=-9;greater(3, -9)=True", 
    "min(filter_greater_eq(all_rows, -, 10), -)=10;diff(3, 10)=-7;less(1, -7);less(1, -7)=False", 
    "min(filter_greater_eq(all_rows, -, 10), -)=10;diff(3, 10)=-7;eq(1, -7)=False", 
    "min(filter_greater_eq(all_rows, -, 10), -)=10;diff(3, 10)=-7;greater(1, -7)=True", 
    "min(filter_greater_eq(all_rows, -, 10), -)=10;add(1, 3)=4;less(10, 4);less(10, 4)=False", 
    "min(filter_greater_eq(all_rows, -, 10), -)=10;add(1, 3)=4;eq(10, 4)=False", 
    "min(filter_greater_eq(all_rows, -, 10), -)=10;add(1, 3)=4;greater(10, 4)=True", 
    "min(filter_greater_eq(all_rows, -, 10), -)=10;add(1, 10)=11;less(3, 11);less(3, 11)=True", 
    "min(filter_greater_eq(all_rows, -, 10), -)=10;add(1, 10)=11;eq(3, 11)=False", 
    "min(filter_greater_eq(all_rows, -, 10), -)=10;add(1, 10)=11;greater(3, 11)=False", 
    "min(filter_greater_eq(all_rows, -, 10), -)=10;add(3, 10)=13;less(1, 13);less(1, 13)=True", 
    "min(filter_greater_eq(all_rows, -, 10), -)=10;add(3, 10)=13;eq(1, 13)=False", 
    "min(filter_greater_eq(all_rows, -, 10), -)=10;add(3, 10)=13;greater(1, 13)=False", 
    "sum(filter_greater_eq(all_rows, -, 10), us viewers (million))=149.45;diff(1, 149.45)=-148.45;less(3, -148.45);less(3, -148.45)=False", 
    "sum(filter_greater_eq(all_rows, -, 10), us viewers (million))=149.45;diff(1, 149.45)=-148.45;eq(3, -148.45)=False", 
    "sum(filter_greater_eq(all_rows, -, 10), us viewers (million))=149.45;diff(1, 149.45)=-148.45;greater(3, -148.45)=True", 
    "sum(filter_greater_eq(all_rows, -, 10), us viewers (million))=149.45;diff(3, 149.45)=-146.45;less(1, -146.45);less(1, -146.45)=False", 
    "sum(filter_greater_eq(all_rows, -, 10), us viewers (million))=149.45;diff(3, 149.45)=-146.45;eq(1, -146.45)=False", 
    "sum(filter_greater_eq(all_rows, -, 10), us viewers (million))=149.45;diff(3, 149.45)=-146.45;greater(1, -146.45)=True", 
    "sum(filter_greater_eq(all_rows, -, 10), us viewers (million))=149.45;add(1, 3)=4;less(149.45, 4);less(149.45, 4)=False", 
    "sum(filter_greater_eq(all_rows, -, 10), us viewers (million))=149.45;add(1, 3)=4;eq(149.45, 4)=False", 
    "sum(filter_greater_eq(all_rows, -, 10), us viewers (million))=149.45;add(1, 3)=4;greater(149.45, 4)=True", 
    "sum(filter_greater_eq(all_rows, -, 10), us viewers (million))=149.45;add(1, 149.45)=150.45;less(3, 150.45);less(3, 150.45)=True", 
    "sum(filter_greater_eq(all_rows, -, 10), us viewers (million))=149.45;add(1, 149.45)=150.45;eq(3, 150.45)=False", 
    "sum(filter_greater_eq(all_rows, -, 10), us viewers (million))=149.45;add(1, 149.45)=150.45;greater(3, 150.45)=False", 
    "sum(filter_greater_eq(all_rows, -, 10), us viewers (million))=149.45;add(3, 149.45)=152.45;less(1, 152.45);less(1, 152.45)=True", 
    "sum(filter_greater_eq(all_rows, -, 10), us viewers (million))=149.45;add(3, 149.45)=152.45;eq(1, 152.45)=False", 
    "sum(filter_greater_eq(all_rows, -, 10), us viewers (million))=149.45;add(3, 149.45)=152.45;greater(1, 152.45)=False", 
    "sum(filter_greater_eq(all_rows, -, 10), -)=208;diff(1, 208)=-207;less(3, -207);less(3, -207)=False", 
    "sum(filter_greater_eq(all_rows, -, 10), -)=208;diff(1, 208)=-207;eq(3, -207)=False", 
    "sum(filter_greater_eq(all_rows, -, 10), -)=208;diff(1, 208)=-207;greater(3, -207)=True", 
    "sum(filter_greater_eq(all_rows, -, 10), -)=208;diff(3, 208)=-205;less(1, -205);less(1, -205)=False", 
    "sum(filter_greater_eq(all_rows, -, 10), -)=208;diff(3, 208)=-205;eq(1, -205)=False", 
    "sum(filter_greater_eq(all_rows, -, 10), -)=208;diff(3, 208)=-205;greater(1, -205)=True", 
    "sum(filter_greater_eq(all_rows, -, 10), -)=208;add(1, 3)=4;less(208, 4);less(208, 4)=False", 
    "sum(filter_greater_eq(all_rows, -, 10), -)=208;add(1, 3)=4;eq(208, 4)=False", 
    "sum(filter_greater_eq(all_rows, -, 10), -)=208;add(1, 3)=4;greater(208, 4)=True", 
    "sum(filter_greater_eq(all_rows, -, 10), -)=208;add(1, 208)=209;less(3, 209);less(3, 209)=True", 
    "sum(filter_greater_eq(all_rows, -, 10), -)=208;add(1, 208)=209;eq(3, 209)=False", 
    "sum(filter_greater_eq(all_rows, -, 10), -)=208;add(1, 208)=209;greater(3, 209)=False", 
    "sum(filter_greater_eq(all_rows, -, 10), -)=208;add(3, 208)=211;less(1, 211);less(1, 211)=True", 
    "sum(filter_greater_eq(all_rows, -, 10), -)=208;add(3, 208)=211;eq(1, 211)=False", 
    "sum(filter_greater_eq(all_rows, -, 10), -)=208;add(3, 208)=211;greater(1, 211)=False", 
    "add(1, 3)=4;max(filter_greater_eq(all_rows, -, 10), us viewers (million))=13.7;less(4, 13.7);less(4, 13.7)=True", 
    "add(1, 3)=4;max(filter_greater_eq(all_rows, -, 10), us viewers (million))=13.7;eq(4, 13.7)=False", 
    "add(1, 3)=4;max(filter_greater_eq(all_rows, -, 10), us viewers (million))=13.7;greater(4, 13.7)=False", 
    "add(1, 3)=4;max(filter_greater_eq(all_rows, -, 10), -)=22;less(4, 22);less(4, 22)=True", 
    "add(1, 3)=4;max(filter_greater_eq(all_rows, -, 10), -)=22;eq(4, 22)=False", 
    "add(1, 3)=4;max(filter_greater_eq(all_rows, -, 10), -)=22;greater(4, 22)=False", 
    "add(1, 3)=4;count(filter_greater_eq(all_rows, -, 10))=13;less(4, 13);less(4, 13)=True", 
    "add(1, 3)=4;count(filter_greater_eq(all_rows, -, 10))=13;eq(4, 13)=False", 
    "add(1, 3)=4;count(filter_greater_eq(all_rows, -, 10))=13;greater(4, 13)=False", 
    "max(filter_greater_eq(all_rows, -, 10), us viewers (million))=13.7;diff(1, 13.7)=-12.7;less(3, -12.7);less(3, -12.7)=False", 
    "max(filter_greater_eq(all_rows, -, 10), us viewers (million))=13.7;diff(1, 13.7)=-12.7;eq(3, -12.7)=False", 
    "max(filter_greater_eq(all_rows, -, 10), us viewers (million))=13.7;diff(1, 13.7)=-12.7;greater(3, -12.7)=True", 
    "max(filter_greater_eq(all_rows, -, 10), us viewers (million))=13.7;diff(3, 13.7)=-10.7;less(1, -10.7);less(1, -10.7)=False", 
    "max(filter_greater_eq(all_rows, -, 10), us viewers (million))=13.7;diff(3, 13.7)=-10.7;eq(1, -10.7)=False", 
    "max(filter_greater_eq(all_rows, -, 10), us viewers (million))=13.7;diff(3, 13.7)=-10.7;greater(1, -10.7)=True", 
    "max(filter_greater_eq(all_rows, -, 10), us viewers (million))=13.7;add(1, 13.7)=14.7;less(3, 14.7);less(3, 14.7)=True", 
    "max(filter_greater_eq(all_rows, -, 10), us viewers (million))=13.7;add(1, 13.7)=14.7;eq(3, 14.7)=False", 
    "max(filter_greater_eq(all_rows, -, 10), us viewers (million))=13.7;add(1, 13.7)=14.7;greater(3, 14.7)=False", 
    "max(filter_greater_eq(all_rows, -, 10), us viewers (million))=13.7;add(3, 13.7)=16.7;less(1, 16.7);less(1, 16.7)=True", 
    "max(filter_greater_eq(all_rows, -, 10), us viewers (million))=13.7;add(3, 13.7)=16.7;eq(1, 16.7)=False", 
    "max(filter_greater_eq(all_rows, -, 10), us viewers (million))=13.7;add(3, 13.7)=16.7;greater(1, 16.7)=False", 
    "max(filter_greater_eq(all_rows, -, 10), -)=22;diff(1, 22)=-21;less(3, -21);less(3, -21)=False", 
    "max(filter_greater_eq(all_rows, -, 10), -)=22;diff(1, 22)=-21;eq(3, -21)=False", 
    "max(filter_greater_eq(all_rows, -, 10), -)=22;diff(1, 22)=-21;greater(3, -21)=True", 
    "max(filter_greater_eq(all_rows, -, 10), -)=22;diff(3, 22)=-19;less(1, -19);less(1, -19)=False", 
    "max(filter_greater_eq(all_rows, -, 10), -)=22;diff(3, 22)=-19;eq(1, -19)=False", 
    "max(filter_greater_eq(all_rows, -, 10), -)=22;diff(3, 22)=-19;greater(1, -19)=True", 
    "max(filter_greater_eq(all_rows, -, 10), -)=22;add(1, 22)=23;less(3, 23);less(3, 23)=True", 
    "max(filter_greater_eq(all_rows, -, 10), -)=22;add(1, 22)=23;eq(3, 23)=False", 
    "max(filter_greater_eq(all_rows, -, 10), -)=22;add(1, 22)=23;greater(3, 23)=False", 
    "max(filter_greater_eq(all_rows, -, 10), -)=22;add(3, 22)=25;less(1, 25);less(1, 25)=True", 
    "max(filter_greater_eq(all_rows, -, 10), -)=22;add(3, 22)=25;eq(1, 25)=False", 
    "max(filter_greater_eq(all_rows, -, 10), -)=22;add(3, 22)=25;greater(1, 25)=False", 
    "count(filter_greater_eq(all_rows, -, 10))=13;diff(1, 13)=-12;less(3, -12);less(3, -12)=False", 
    "count(filter_greater_eq(all_rows, -, 10))=13;diff(1, 13)=-12;eq(3, -12)=False", 
    "count(filter_greater_eq(all_rows, -, 10))=13;diff(1, 13)=-12;greater(3, -12)=True", 
    "count(filter_greater_eq(all_rows, -, 10))=13;diff(3, 13)=-10;less(1, -10);less(1, -10)=False", 
    "count(filter_greater_eq(all_rows, -, 10))=13;diff(3, 13)=-10;eq(1, -10)=False", 
    "count(filter_greater_eq(all_rows, -, 10))=13;diff(3, 13)=-10;greater(1, -10)=True", 
    "count(filter_greater_eq(all_rows, -, 10))=13;add(1, 13)=14;less(3, 14);less(3, 14)=True", 
    "count(filter_greater_eq(all_rows, -, 10))=13;add(1, 13)=14;eq(3, 14)=False", 
    "count(filter_greater_eq(all_rows, -, 10))=13;add(1, 13)=14;greater(3, 14)=False", 
    "count(filter_greater_eq(all_rows, -, 10))=13;add(3, 13)=16;less(1, 16);less(1, 16)=True", 
    "count(filter_greater_eq(all_rows, -, 10))=13;add(3, 13)=16;eq(1, 16)=False", 
    "count(filter_greater_eq(all_rows, -, 10))=13;add(3, 13)=16;greater(1, 16)=False", 
    "diff(1, 3)=-2;diff(10, -2)=12;min(all_rows, -)=1;less(12, 1);less(12, 1)=False", 
    "diff(1, 3)=-2;diff(10, -2)=12;min(all_rows, -)=1;eq(12, 1)=False", 
    "diff(1, 3)=-2;diff(10, -2)=12;min(all_rows, -)=1;greater(12, 1)=True", 
    "diff(1, 3)=-2;diff(10, -2)=12;sum(all_rows, -)=253;less(12, 253);less(12, 253)=True", 
    "diff(1, 3)=-2;diff(10, -2)=12;sum(all_rows, -)=253;eq(12, 253)=False", 
    "diff(1, 3)=-2;diff(10, -2)=12;sum(all_rows, -)=253;greater(12, 253)=False", 
    "diff(1, 3)=-2;diff(10, -2)=12;max(all_rows, -)=22;less(12, 22);less(12, 22)=True", 
    "diff(1, 3)=-2;diff(10, -2)=12;max(all_rows, -)=22;eq(12, 22)=False", 
    "diff(1, 3)=-2;diff(10, -2)=12;max(all_rows, -)=22;greater(12, 22)=False", 
    "diff(1, 3)=-2;min(filter_greater(all_rows, -, 10), us viewers (million))=9.7;less(-2, 9.7);less(-2, 9.7)=True", 
    "diff(1, 3)=-2;min(filter_greater(all_rows, -, 10), us viewers (million))=9.7;eq(-2, 9.7)=False", 
    "diff(1, 3)=-2;min(filter_greater(all_rows, -, 10), us viewers (million))=9.7;greater(-2, 9.7)=False", 
    "diff(1, 3)=-2;min(filter_greater(all_rows, -, 10), -)=11;less(-2, 11);less(-2, 11)=True", 
    "diff(1, 3)=-2;min(filter_greater(all_rows, -, 10), -)=11;eq(-2, 11)=False", 
    "diff(1, 3)=-2;min(filter_greater(all_rows, -, 10), -)=11;greater(-2, 11)=False", 
    "diff(1, 3)=-2;sum(filter_greater(all_rows, -, 10), us viewers (million))=136.89;less(-2, 136.89);less(-2, 136.89)=True", 
    "diff(1, 3)=-2;sum(filter_greater(all_rows, -, 10), us viewers (million))=136.89;eq(-2, 136.89)=False", 
    "diff(1, 3)=-2;sum(filter_greater(all_rows, -, 10), us viewers (million))=136.89;greater(-2, 136.89)=False", 
    "diff(1, 3)=-2;sum(filter_greater(all_rows, -, 10), -)=198;less(-2, 198);less(-2, 198)=True", 
    "diff(1, 3)=-2;sum(filter_greater(all_rows, -, 10), -)=198;eq(-2, 198)=False", 
    "diff(1, 3)=-2;sum(filter_greater(all_rows, -, 10), -)=198;greater(-2, 198)=False", 
    "diff(1, 3)=-2;max(filter_greater(all_rows, -, 10), us viewers (million))=13.7;less(-2, 13.7);less(-2, 13.7)=True", 
    "diff(1, 3)=-2;max(filter_greater(all_rows, -, 10), us viewers (million))=13.7;eq(-2, 13.7)=False", 
    "diff(1, 3)=-2;max(filter_greater(all_rows, -, 10), us viewers (million))=13.7;greater(-2, 13.7)=False", 
    "diff(1, 3)=-2;max(filter_greater(all_rows, -, 10), -)=22;less(-2, 22);less(-2, 22)=True", 
    "diff(1, 3)=-2;max(filter_greater(all_rows, -, 10), -)=22;eq(-2, 22)=False", 
    "diff(1, 3)=-2;max(filter_greater(all_rows, -, 10), -)=22;greater(-2, 22)=False", 
    "diff(1, 3)=-2;count(filter_greater(all_rows, -, 10))=12;less(-2, 12);less(-2, 12)=True", 
    "diff(1, 3)=-2;count(filter_greater(all_rows, -, 10))=12;eq(-2, 12)=False", 
    "diff(1, 3)=-2;count(filter_greater(all_rows, -, 10))=12;greater(-2, 12)=False", 
    "diff(1, 3)=-2;diff(10, -2)=12;less(10, 12);less(10, 12)=True", 
    "diff(1, 3)=-2;diff(10, -2)=12;eq(10, 12)=False", 
    "diff(1, 3)=-2;diff(10, -2)=12;greater(10, 12)=False", 
    "diff(1, 3)=-2;diff(-2, 10)=-12;less(10, -12);less(10, -12)=False", 
    "diff(1, 3)=-2;diff(-2, 10)=-12;eq(10, -12)=False", 
    "diff(1, 3)=-2;diff(-2, 10)=-12;greater(10, -12)=True", 
    "diff(1, 3)=-2;add(10, -2)=8;less(10, 8);less(10, 8)=False", 
    "diff(1, 3)=-2;add(10, -2)=8;eq(10, 8)=False", 
    "diff(1, 3)=-2;add(10, -2)=8;greater(10, 8)=True", 
    "diff(1, 3)=-2;add(-2, 10)=8;less(10, 8);less(10, 8)=False", 
    "diff(1, 3)=-2;add(-2, 10)=8;eq(10, 8)=False", 
    "diff(1, 3)=-2;add(-2, 10)=8;greater(10, 8)=True", 
    "diff(1, 3)=-2;min(all_rows, us viewers (million))=9.7;diff(-2, 9.7)=-11.7;less(10, -11.7);less(10, -11.7)=False", 
    "diff(1, 3)=-2;min(all_rows, us viewers (million))=9.7;diff(-2, 9.7)=-11.7;eq(10, -11.7)=False", 
    "diff(1, 3)=-2;min(all_rows, us viewers (million))=9.7;diff(-2, 9.7)=-11.7;greater(10, -11.7)=True", 
    "diff(1, 3)=-2;min(all_rows, us viewers (million))=9.7;add(-2, 9.7)=7.7;less(10, 7.7);less(10, 7.7)=False", 
    "diff(1, 3)=-2;min(all_rows, us viewers (million))=9.7;add(-2, 9.7)=7.7;eq(10, 7.7)=False", 
    "diff(1, 3)=-2;min(all_rows, us viewers (million))=9.7;add(-2, 9.7)=7.7;greater(10, 7.7)=True", 
    "diff(1, 3)=-2;min(all_rows, -)=1;diff(10, 1)=9;less(-2, 9);less(-2, 9)=True", 
    "diff(1, 3)=-2;min(all_rows, -)=1;diff(10, 1)=9;eq(-2, 9)=False", 
    "diff(1, 3)=-2;min(all_rows, -)=1;diff(10, 1)=9;greater(-2, 9)=False", 
    "diff(1, 3)=-2;min(all_rows, -)=1;diff(-2, 1)=-3;less(10, -3);less(10, -3)=False", 
    "diff(1, 3)=-2;min(all_rows, -)=1;diff(-2, 1)=-3;eq(10, -3)=False", 
    "diff(1, 3)=-2;min(all_rows, -)=1;diff(-2, 1)=-3;greater(10, -3)=True", 
    "diff(1, 3)=-2;min(all_rows, -)=1;add(10, -2)=8;less(1, 8);less(1, 8)=True", 
    "diff(1, 3)=-2;min(all_rows, -)=1;add(10, -2)=8;eq(1, 8)=False", 
    "diff(1, 3)=-2;min(all_rows, -)=1;add(10, -2)=8;greater(1, 8)=False", 
    "diff(1, 3)=-2;min(all_rows, -)=1;add(10, 1)=11;less(-2, 11);less(-2, 11)=True", 
    "diff(1, 3)=-2;min(all_rows, -)=1;add(10, 1)=11;eq(-2, 11)=False", 
    "diff(1, 3)=-2;min(all_rows, -)=1;add(10, 1)=11;greater(-2, 11)=False", 
    "diff(1, 3)=-2;min(all_rows, -)=1;add(-2, 1)=-1;less(10, -1);less(10, -1)=False", 
    "diff(1, 3)=-2;min(all_rows, -)=1;add(-2, 1)=-1;eq(10, -1)=False", 
    "diff(1, 3)=-2;min(all_rows, -)=1;add(-2, 1)=-1;greater(10, -1)=True", 
    "diff(1, 3)=-2;sum(all_rows, us viewers (million))=259.46;diff(-2, 259.46)=-261.46;less(10, -261.46);less(10, -261.46)=False", 
    "diff(1, 3)=-2;sum(all_rows, us viewers (million))=259.46;diff(-2, 259.46)=-261.46;eq(10, -261.46)=False", 
    "diff(1, 3)=-2;sum(all_rows, us viewers (million))=259.46;diff(-2, 259.46)=-261.46;greater(10, -261.46)=True", 
    "diff(1, 3)=-2;sum(all_rows, us viewers (million))=259.46;add(-2, 259.46)=257.46;less(10, 257.46);less(10, 257.46)=True", 
    "diff(1, 3)=-2;sum(all_rows, us viewers (million))=259.46;add(-2, 259.46)=257.46;eq(10, 257.46)=False", 
    "diff(1, 3)=-2;sum(all_rows, us viewers (million))=259.46;add(-2, 259.46)=257.46;greater(10, 257.46)=False", 
    "diff(1, 3)=-2;sum(all_rows, -)=253;diff(10, 253)=-243;less(-2, -243);less(-2, -243)=False", 
    "diff(1, 3)=-2;sum(all_rows, -)=253;diff(10, 253)=-243;eq(-2, -243)=False", 
    "diff(1, 3)=-2;sum(all_rows, -)=253;diff(10, 253)=-243;greater(-2, -243)=True", 
    "diff(1, 3)=-2;sum(all_rows, -)=253;diff(-2, 253)=-255;less(10, -255);less(10, -255)=False", 
    "diff(1, 3)=-2;sum(all_rows, -)=253;diff(-2, 253)=-255;eq(10, -255)=False", 
    "diff(1, 3)=-2;sum(all_rows, -)=253;diff(-2, 253)=-255;greater(10, -255)=True", 
    "diff(1, 3)=-2;sum(all_rows, -)=253;add(10, -2)=8;less(253, 8);less(253, 8)=False", 
    "diff(1, 3)=-2;sum(all_rows, -)=253;add(10, -2)=8;eq(253, 8)=False", 
    "diff(1, 3)=-2;sum(all_rows, -)=253;add(10, -2)=8;greater(253, 8)=True", 
    "diff(1, 3)=-2;sum(all_rows, -)=253;add(10, 253)=263;less(-2, 263);less(-2, 263)=True", 
    "diff(1, 3)=-2;sum(all_rows, -)=253;add(10, 253)=263;eq(-2, 263)=False", 
    "diff(1, 3)=-2;sum(all_rows, -)=253;add(10, 253)=263;greater(-2, 263)=False", 
    "diff(1, 3)=-2;sum(all_rows, -)=253;add(-2, 253)=251;less(10, 251);less(10, 251)=True", 
    "diff(1, 3)=-2;sum(all_rows, -)=253;add(-2, 253)=251;eq(10, 251)=False", 
    "diff(1, 3)=-2;sum(all_rows, -)=253;add(-2, 253)=251;greater(10, 251)=False", 
    "diff(1, 3)=-2;add(10, -2)=8;max(all_rows, -)=22;less(8, 22);less(8, 22)=True", 
    "diff(1, 3)=-2;add(10, -2)=8;max(all_rows, -)=22;eq(8, 22)=False", 
    "diff(1, 3)=-2;add(10, -2)=8;max(all_rows, -)=22;greater(8, 22)=False", 
    "diff(1, 3)=-2;min(filter_less(all_rows, -, 10), us viewers (million))=11.34;less(-2, 11.34);less(-2, 11.34)=True", 
    "diff(1, 3)=-2;min(filter_less(all_rows, -, 10), us viewers (million))=11.34;eq(-2, 11.34)=False", 
    "diff(1, 3)=-2;min(filter_less(all_rows, -, 10), us viewers (million))=11.34;greater(-2, 11.34)=False", 
    "diff(1, 3)=-2;min(filter_less(all_rows, -, 10), -)=1;less(-2, 1);less(-2, 1)=True", 
    "diff(1, 3)=-2;min(filter_less(all_rows, -, 10), -)=1;eq(-2, 1)=False", 
    "diff(1, 3)=-2;min(filter_less(all_rows, -, 10), -)=1;greater(-2, 1)=False", 
    "diff(1, 3)=-2;sum(filter_less(all_rows, -, 10), us viewers (million))=110.01;less(-2, 110.01);less(-2, 110.01)=True", 
    "diff(1, 3)=-2;sum(filter_less(all_rows, -, 10), us viewers (million))=110.01;eq(-2, 110.01)=False", 
    "diff(1, 3)=-2;sum(filter_less(all_rows, -, 10), us viewers (million))=110.01;greater(-2, 110.01)=False", 
    "diff(1, 3)=-2;sum(filter_less(all_rows, -, 10), -)=45;less(-2, 45);less(-2, 45)=True", 
    "diff(1, 3)=-2;sum(filter_less(all_rows, -, 10), -)=45;eq(-2, 45)=False", 
    "diff(1, 3)=-2;sum(filter_less(all_rows, -, 10), -)=45;greater(-2, 45)=False", 
    "diff(1, 3)=-2;max(filter_less(all_rows, -, 10), us viewers (million))=13.22;less(-2, 13.22);less(-2, 13.22)=True", 
    "diff(1, 3)=-2;max(filter_less(all_rows, -, 10), us viewers (million))=13.22;eq(-2, 13.22)=False", 
    "diff(1, 3)=-2;max(filter_less(all_rows, -, 10), us viewers (million))=13.22;greater(-2, 13.22)=False", 
    "diff(1, 3)=-2;max(filter_less(all_rows, -, 10), -)=9;less(-2, 9);less(-2, 9)=True", 
    "diff(1, 3)=-2;max(filter_less(all_rows, -, 10), -)=9;eq(-2, 9)=False", 
    "diff(1, 3)=-2;max(filter_less(all_rows, -, 10), -)=9;greater(-2, 9)=False", 
    "diff(1, 3)=-2;count(filter_less(all_rows, -, 10))=9;less(-2, 9);less(-2, 9)=True", 
    "diff(1, 3)=-2;count(filter_less(all_rows, -, 10))=9;eq(-2, 9)=False", 
    "diff(1, 3)=-2;count(filter_less(all_rows, -, 10))=9;greater(-2, 9)=False", 
    "diff(1, 3)=-2;max(all_rows, us viewers (million))=13.7;diff(-2, 13.7)=-15.7;less(10, -15.7);less(10, -15.7)=False", 
    "diff(1, 3)=-2;max(all_rows, us viewers (million))=13.7;diff(-2, 13.7)=-15.7;eq(10, -15.7)=False", 
    "diff(1, 3)=-2;max(all_rows, us viewers (million))=13.7;diff(-2, 13.7)=-15.7;greater(10, -15.7)=True", 
    "diff(1, 3)=-2;max(all_rows, us viewers (million))=13.7;add(-2, 13.7)=11.7;less(10, 11.7);less(10, 11.7)=True", 
    "diff(1, 3)=-2;max(all_rows, us viewers (million))=13.7;add(-2, 13.7)=11.7;eq(10, 11.7)=False", 
    "diff(1, 3)=-2;max(all_rows, us viewers (million))=13.7;add(-2, 13.7)=11.7;greater(10, 11.7)=False", 
    "diff(1, 3)=-2;max(all_rows, -)=22;diff(10, 22)=-12;less(-2, -12);less(-2, -12)=False", 
    "diff(1, 3)=-2;max(all_rows, -)=22;diff(10, 22)=-12;eq(-2, -12)=False", 
    "diff(1, 3)=-2;max(all_rows, -)=22;diff(10, 22)=-12;greater(-2, -12)=True", 
    "diff(1, 3)=-2;max(all_rows, -)=22;diff(-2, 22)=-24;less(10, -24);less(10, -24)=False", 
    "diff(1, 3)=-2;max(all_rows, -)=22;diff(-2, 22)=-24;eq(10, -24)=False", 
    "diff(1, 3)=-2;max(all_rows, -)=22;diff(-2, 22)=-24;greater(10, -24)=True", 
    "diff(1, 3)=-2;max(all_rows, -)=22;add(10, 22)=32;less(-2, 32);less(-2, 32)=True", 
    "diff(1, 3)=-2;max(all_rows, -)=22;add(10, 22)=32;eq(-2, 32)=False", 
    "diff(1, 3)=-2;max(all_rows, -)=22;add(10, 22)=32;greater(-2, 32)=False", 
    "diff(1, 3)=-2;max(all_rows, -)=22;add(-2, 22)=20;less(10, 20);less(10, 20)=True", 
    "diff(1, 3)=-2;max(all_rows, -)=22;add(-2, 22)=20;eq(10, 20)=False", 
    "diff(1, 3)=-2;max(all_rows, -)=22;add(-2, 22)=20;greater(10, 20)=False", 
    "diff(1, 3)=-2;count(filter_eq(all_rows, -, 10))=1;less(-2, 1);less(-2, 1)=True", 
    "diff(1, 3)=-2;count(filter_eq(all_rows, -, 10))=1;eq(-2, 1)=False", 
    "diff(1, 3)=-2;count(filter_eq(all_rows, -, 10))=1;greater(-2, 1)=False", 
    "diff(1, 3)=-2;hop(filter_eq(all_rows, -, 10), us viewers (million))=12.56;less(-2, 12.56);less(-2, 12.56)=True", 
    "diff(1, 3)=-2;hop(filter_eq(all_rows, -, 10), us viewers (million))=12.56;eq(-2, 12.56)=False", 
    "diff(1, 3)=-2;hop(filter_eq(all_rows, -, 10), us viewers (million))=12.56;greater(-2, 12.56)=False", 
    "diff(1, 3)=-2;hop(filter_eq(all_rows, -, 10), -)=10;less(-2, 10);less(-2, 10)=True", 
    "diff(1, 3)=-2;hop(filter_eq(all_rows, -, 10), -)=10;eq(-2, 10)=False", 
    "diff(1, 3)=-2;hop(filter_eq(all_rows, -, 10), -)=10;greater(-2, 10)=False", 
    "diff(1, 3)=-2;count(all_rows)=22;diff(-2, 22)=-24;less(10, -24);less(10, -24)=False", 
    "diff(1, 3)=-2;count(all_rows)=22;diff(-2, 22)=-24;eq(10, -24)=False", 
    "diff(1, 3)=-2;count(all_rows)=22;diff(-2, 22)=-24;greater(10, -24)=True", 
    "diff(1, 3)=-2;count(all_rows)=22;add(-2, 22)=20;less(10, 20);less(10, 20)=True", 
    "diff(1, 3)=-2;count(all_rows)=22;add(-2, 22)=20;eq(10, 20)=False", 
    "diff(1, 3)=-2;count(all_rows)=22;add(-2, 22)=20;greater(10, 20)=False", 
    "diff(1, 3)=-2;min(filter_less_eq(all_rows, -, 10), us viewers (million))=11.34;less(-2, 11.34);less(-2, 11.34)=True", 
    "diff(1, 3)=-2;min(filter_less_eq(all_rows, -, 10), us viewers (million))=11.34;eq(-2, 11.34)=False", 
    "diff(1, 3)=-2;min(filter_less_eq(all_rows, -, 10), us viewers (million))=11.34;greater(-2, 11.34)=False", 
    "diff(1, 3)=-2;min(filter_less_eq(all_rows, -, 10), -)=1;less(-2, 1);less(-2, 1)=True", 
    "diff(1, 3)=-2;min(filter_less_eq(all_rows, -, 10), -)=1;eq(-2, 1)=False", 
    "diff(1, 3)=-2;min(filter_less_eq(all_rows, -, 10), -)=1;greater(-2, 1)=False", 
    "diff(1, 3)=-2;sum(filter_less_eq(all_rows, -, 10), us viewers (million))=122.57;less(-2, 122.57);less(-2, 122.57)=True", 
    "diff(1, 3)=-2;sum(filter_less_eq(all_rows, -, 10), us viewers (million))=122.57;eq(-2, 122.57)=False", 
    "diff(1, 3)=-2;sum(filter_less_eq(all_rows, -, 10), us viewers (million))=122.57;greater(-2, 122.57)=False", 
    "diff(1, 3)=-2;sum(filter_less_eq(all_rows, -, 10), -)=55;less(-2, 55);less(-2, 55)=True", 
    "diff(1, 3)=-2;sum(filter_less_eq(all_rows, -, 10), -)=55;eq(-2, 55)=False", 
    "diff(1, 3)=-2;sum(filter_less_eq(all_rows, -, 10), -)=55;greater(-2, 55)=False", 
    "diff(1, 3)=-2;max(filter_less_eq(all_rows, -, 10), us viewers (million))=13.22;less(-2, 13.22);less(-2, 13.22)=True", 
    "diff(1, 3)=-2;max(filter_less_eq(all_rows, -, 10), us viewers (million))=13.22;eq(-2, 13.22)=False", 
    "diff(1, 3)=-2;max(filter_less_eq(all_rows, -, 10), us viewers (million))=13.22;greater(-2, 13.22)=False", 
    "diff(1, 3)=-2;max(filter_less_eq(all_rows, -, 10), -)=10;less(-2, 10);less(-2, 10)=True", 
    "diff(1, 3)=-2;max(filter_less_eq(all_rows, -, 10), -)=10;eq(-2, 10)=False", 
    "diff(1, 3)=-2;max(filter_less_eq(all_rows, -, 10), -)=10;greater(-2, 10)=False", 
    "diff(1, 3)=-2;count(filter_less_eq(all_rows, -, 10))=10;less(-2, 10);less(-2, 10)=True", 
    "diff(1, 3)=-2;count(filter_less_eq(all_rows, -, 10))=10;eq(-2, 10)=False", 
    "diff(1, 3)=-2;count(filter_less_eq(all_rows, -, 10))=10;greater(-2, 10)=False", 
    "min(all_rows, -)=1;less(10, 1);and(eq(1, 3), less(10, 1))=False", 
    "min(all_rows, -)=1;and(eq(1, 3), eq(10, 1))=False", 
    "min(all_rows, -)=1;and(eq(1, 3), greater(10, 1))=False", 
    "sum(all_rows, -)=253;less(10, 253);and(eq(1, 3), less(10, 253))=False", 
    "sum(all_rows, -)=253;and(eq(1, 3), eq(10, 253))=False", 
    "sum(all_rows, -)=253;and(eq(1, 3), greater(10, 253))=False", 
    "max(all_rows, -)=22;less(10, 22);and(eq(1, 3), less(10, 22))=False", 
    "max(all_rows, -)=22;and(eq(1, 3), eq(10, 22))=False", 
    "max(all_rows, -)=22;and(eq(1, 3), greater(10, 22))=False", 
    "and(eq(1, 3), all_greater_eq(argmin(all_rows, us viewers (million)), -, 10))=False", 
    "and(eq(1, 3), all_eq(argmin(all_rows, us viewers (million)), -, 10))=False", 
    "and(eq(1, 3), all_less(argmin(all_rows, us viewers (million)), -, 10))=False", 
    "and(eq(1, 3), all_greater(argmin(all_rows, us viewers (million)), -, 10))=False", 
    "and(eq(1, 3), all_less_eq(argmin(all_rows, us viewers (million)), -, 10))=False", 
    "and(eq(1, 3), all_greater_eq(argmin(all_rows, -), -, 10))=False", 
    "and(eq(1, 3), all_eq(argmin(all_rows, -), -, 10))=False", 
    "and(eq(1, 3), all_less(argmin(all_rows, -), -, 10))=False", 
    "and(eq(1, 3), all_greater(argmin(all_rows, -), -, 10))=False", 
    "and(eq(1, 3), all_less_eq(argmin(all_rows, -), -, 10))=False", 
    "min(filter_greater(all_rows, -, 10), us viewers (million))=9.7;diff(1, 9.7)=-8.7;less(3, -8.7);less(3, -8.7)=False", 
    "min(filter_greater(all_rows, -, 10), us viewers (million))=9.7;diff(1, 9.7)=-8.7;eq(3, -8.7)=False", 
    "min(filter_greater(all_rows, -, 10), us viewers (million))=9.7;diff(1, 9.7)=-8.7;greater(3, -8.7)=True", 
    "min(filter_greater(all_rows, -, 10), us viewers (million))=9.7;diff(3, 9.7)=-6.7;less(1, -6.7);less(1, -6.7)=False", 
    "min(filter_greater(all_rows, -, 10), us viewers (million))=9.7;diff(3, 9.7)=-6.7;eq(1, -6.7)=False", 
    "min(filter_greater(all_rows, -, 10), us viewers (million))=9.7;diff(3, 9.7)=-6.7;greater(1, -6.7)=True", 
    "min(filter_greater(all_rows, -, 10), us viewers (million))=9.7;add(1, 3)=4;less(9.7, 4);less(9.7, 4)=False", 
    "min(filter_greater(all_rows, -, 10), us viewers (million))=9.7;add(1, 3)=4;eq(9.7, 4)=False", 
    "min(filter_greater(all_rows, -, 10), us viewers (million))=9.7;add(1, 3)=4;greater(9.7, 4)=True", 
    "min(filter_greater(all_rows, -, 10), us viewers (million))=9.7;add(1, 9.7)=10.7;less(3, 10.7);less(3, 10.7)=True", 
    "min(filter_greater(all_rows, -, 10), us viewers (million))=9.7;add(1, 9.7)=10.7;eq(3, 10.7)=False", 
    "min(filter_greater(all_rows, -, 10), us viewers (million))=9.7;add(1, 9.7)=10.7;greater(3, 10.7)=False", 
    "min(filter_greater(all_rows, -, 10), us viewers (million))=9.7;add(3, 9.7)=12.7;less(1, 12.7);less(1, 12.7)=True", 
    "min(filter_greater(all_rows, -, 10), us viewers (million))=9.7;add(3, 9.7)=12.7;eq(1, 12.7)=False", 
    "min(filter_greater(all_rows, -, 10), us viewers (million))=9.7;add(3, 9.7)=12.7;greater(1, 12.7)=False", 
    "min(filter_greater(all_rows, -, 10), -)=11;diff(1, 11)=-10;less(3, -10);less(3, -10)=False", 
    "min(filter_greater(all_rows, -, 10), -)=11;diff(1, 11)=-10;eq(3, -10)=False", 
    "min(filter_greater(all_rows, -, 10), -)=11;diff(1, 11)=-10;greater(3, -10)=True", 
    "min(filter_greater(all_rows, -, 10), -)=11;diff(3, 11)=-8;less(1, -8);less(1, -8)=False", 
    "min(filter_greater(all_rows, -, 10), -)=11;diff(3, 11)=-8;eq(1, -8)=False", 
    "min(filter_greater(all_rows, -, 10), -)=11;diff(3, 11)=-8;greater(1, -8)=True", 
    "min(filter_greater(all_rows, -, 10), -)=11;add(1, 3)=4;less(11, 4);less(11, 4)=False", 
    "min(filter_greater(all_rows, -, 10), -)=11;add(1, 3)=4;eq(11, 4)=False", 
    "min(filter_greater(all_rows, -, 10), -)=11;add(1, 3)=4;greater(11, 4)=True", 
    "min(filter_greater(all_rows, -, 10), -)=11;add(1, 11)=12;less(3, 12);less(3, 12)=True", 
    "min(filter_greater(all_rows, -, 10), -)=11;add(1, 11)=12;eq(3, 12)=False", 
    "min(filter_greater(all_rows, -, 10), -)=11;add(1, 11)=12;greater(3, 12)=False", 
    "min(filter_greater(all_rows, -, 10), -)=11;add(3, 11)=14;less(1, 14);less(1, 14)=True", 
    "min(filter_greater(all_rows, -, 10), -)=11;add(3, 11)=14;eq(1, 14)=False", 
    "min(filter_greater(all_rows, -, 10), -)=11;add(3, 11)=14;greater(1, 14)=False", 
    "sum(filter_greater(all_rows, -, 10), us viewers (million))=136.89;diff(1, 136.89)=-135.89;less(3, -135.89);less(3, -135.89)=False", 
    "sum(filter_greater(all_rows, -, 10), us viewers (million))=136.89;diff(1, 136.89)=-135.89;eq(3, -135.89)=False", 
    "sum(filter_greater(all_rows, -, 10), us viewers (million))=136.89;diff(1, 136.89)=-135.89;greater(3, -135.89)=True", 
    "sum(filter_greater(all_rows, -, 10), us viewers (million))=136.89;diff(3, 136.89)=-133.89;less(1, -133.89);less(1, -133.89)=False", 
    "sum(filter_greater(all_rows, -, 10), us viewers (million))=136.89;diff(3, 136.89)=-133.89;eq(1, -133.89)=False", 
    "sum(filter_greater(all_rows, -, 10), us viewers (million))=136.89;diff(3, 136.89)=-133.89;greater(1, -133.89)=True", 
    "sum(filter_greater(all_rows, -, 10), us viewers (million))=136.89;add(1, 3)=4;less(136.89, 4);less(136.89, 4)=False", 
    "sum(filter_greater(all_rows, -, 10), us viewers (million))=136.89;add(1, 3)=4;eq(136.89, 4)=False", 
    "sum(filter_greater(all_rows, -, 10), us viewers (million))=136.89;add(1, 3)=4;greater(136.89, 4)=True", 
    "sum(filter_greater(all_rows, -, 10), us viewers (million))=136.89;add(1, 136.89)=137.89;less(3, 137.89);less(3, 137.89)=True", 
    "sum(filter_greater(all_rows, -, 10), us viewers (million))=136.89;add(1, 136.89)=137.89;eq(3, 137.89)=False", 
    "sum(filter_greater(all_rows, -, 10), us viewers (million))=136.89;add(1, 136.89)=137.89;greater(3, 137.89)=False", 
    "sum(filter_greater(all_rows, -, 10), us viewers (million))=136.89;add(3, 136.89)=139.89;less(1, 139.89);less(1, 139.89)=True", 
    "sum(filter_greater(all_rows, -, 10), us viewers (million))=136.89;add(3, 136.89)=139.89;eq(1, 139.89)=False", 
    "sum(filter_greater(all_rows, -, 10), us viewers (million))=136.89;add(3, 136.89)=139.89;greater(1, 139.89)=False", 
    "sum(filter_greater(all_rows, -, 10), -)=198;diff(1, 198)=-197;less(3, -197);less(3, -197)=False", 
    "sum(filter_greater(all_rows, -, 10), -)=198;diff(1, 198)=-197;eq(3, -197)=False", 
    "sum(filter_greater(all_rows, -, 10), -)=198;diff(1, 198)=-197;greater(3, -197)=True", 
    "sum(filter_greater(all_rows, -, 10), -)=198;diff(3, 198)=-195;less(1, -195);less(1, -195)=False", 
    "sum(filter_greater(all_rows, -, 10), -)=198;diff(3, 198)=-195;eq(1, -195)=False", 
    "sum(filter_greater(all_rows, -, 10), -)=198;diff(3, 198)=-195;greater(1, -195)=True", 
    "sum(filter_greater(all_rows, -, 10), -)=198;add(1, 3)=4;less(198, 4);less(198, 4)=False", 
    "sum(filter_greater(all_rows, -, 10), -)=198;add(1, 3)=4;eq(198, 4)=False", 
    "sum(filter_greater(all_rows, -, 10), -)=198;add(1, 3)=4;greater(198, 4)=True", 
    "sum(filter_greater(all_rows, -, 10), -)=198;add(1, 198)=199;less(3, 199);less(3, 199)=True", 
    "sum(filter_greater(all_rows, -, 10), -)=198;add(1, 198)=199;eq(3, 199)=False", 
    "sum(filter_greater(all_rows, -, 10), -)=198;add(1, 198)=199;greater(3, 199)=False", 
    "sum(filter_greater(all_rows, -, 10), -)=198;add(3, 198)=201;less(1, 201);less(1, 201)=True", 
    "sum(filter_greater(all_rows, -, 10), -)=198;add(3, 198)=201;eq(1, 201)=False", 
    "sum(filter_greater(all_rows, -, 10), -)=198;add(3, 198)=201;greater(1, 201)=False", 
    "add(1, 3)=4;max(filter_greater(all_rows, -, 10), us viewers (million))=13.7;less(4, 13.7);less(4, 13.7)=True", 
    "add(1, 3)=4;max(filter_greater(all_rows, -, 10), us viewers (million))=13.7;eq(4, 13.7)=False", 
    "add(1, 3)=4;max(filter_greater(all_rows, -, 10), us viewers (million))=13.7;greater(4, 13.7)=False", 
    "add(1, 3)=4;max(filter_greater(all_rows, -, 10), -)=22;less(4, 22);less(4, 22)=True", 
    "add(1, 3)=4;max(filter_greater(all_rows, -, 10), -)=22;eq(4, 22)=False", 
    "add(1, 3)=4;max(filter_greater(all_rows, -, 10), -)=22;greater(4, 22)=False", 
    "add(1, 3)=4;count(filter_greater(all_rows, -, 10))=12;less(4, 12);less(4, 12)=True", 
    "add(1, 3)=4;count(filter_greater(all_rows, -, 10))=12;eq(4, 12)=False", 
    "add(1, 3)=4;count(filter_greater(all_rows, -, 10))=12;greater(4, 12)=False", 
    "max(filter_greater(all_rows, -, 10), us viewers (million))=13.7;diff(1, 13.7)=-12.7;less(3, -12.7);less(3, -12.7)=False", 
    "max(filter_greater(all_rows, -, 10), us viewers (million))=13.7;diff(1, 13.7)=-12.7;eq(3, -12.7)=False", 
    "max(filter_greater(all_rows, -, 10), us viewers (million))=13.7;diff(1, 13.7)=-12.7;greater(3, -12.7)=True", 
    "max(filter_greater(all_rows, -, 10), us viewers (million))=13.7;diff(3, 13.7)=-10.7;less(1, -10.7);less(1, -10.7)=False", 
    "max(filter_greater(all_rows, -, 10), us viewers (million))=13.7;diff(3, 13.7)=-10.7;eq(1, -10.7)=False", 
    "max(filter_greater(all_rows, -, 10), us viewers (million))=13.7;diff(3, 13.7)=-10.7;greater(1, -10.7)=True", 
    "max(filter_greater(all_rows, -, 10), us viewers (million))=13.7;add(1, 13.7)=14.7;less(3, 14.7);less(3, 14.7)=True", 
    "max(filter_greater(all_rows, -, 10), us viewers (million))=13.7;add(1, 13.7)=14.7;eq(3, 14.7)=False", 
    "max(filter_greater(all_rows, -, 10), us viewers (million))=13.7;add(1, 13.7)=14.7;greater(3, 14.7)=False", 
    "max(filter_greater(all_rows, -, 10), us viewers (million))=13.7;add(3, 13.7)=16.7;less(1, 16.7);less(1, 16.7)=True", 
    "max(filter_greater(all_rows, -, 10), us viewers (million))=13.7;add(3, 13.7)=16.7;eq(1, 16.7)=False", 
    "max(filter_greater(all_rows, -, 10), us viewers (million))=13.7;add(3, 13.7)=16.7;greater(1, 16.7)=False", 
    "max(filter_greater(all_rows, -, 10), -)=22;diff(1, 22)=-21;less(3, -21);less(3, -21)=False", 
    "max(filter_greater(all_rows, -, 10), -)=22;diff(1, 22)=-21;eq(3, -21)=False", 
    "max(filter_greater(all_rows, -, 10), -)=22;diff(1, 22)=-21;greater(3, -21)=True", 
    "max(filter_greater(all_rows, -, 10), -)=22;diff(3, 22)=-19;less(1, -19);less(1, -19)=False", 
    "max(filter_greater(all_rows, -, 10), -)=22;diff(3, 22)=-19;eq(1, -19)=False", 
    "max(filter_greater(all_rows, -, 10), -)=22;diff(3, 22)=-19;greater(1, -19)=True", 
    "max(filter_greater(all_rows, -, 10), -)=22;add(1, 22)=23;less(3, 23);less(3, 23)=True", 
    "max(filter_greater(all_rows, -, 10), -)=22;add(1, 22)=23;eq(3, 23)=False", 
    "max(filter_greater(all_rows, -, 10), -)=22;add(1, 22)=23;greater(3, 23)=False", 
    "max(filter_greater(all_rows, -, 10), -)=22;add(3, 22)=25;less(1, 25);less(1, 25)=True", 
    "max(filter_greater(all_rows, -, 10), -)=22;add(3, 22)=25;eq(1, 25)=False", 
    "max(filter_greater(all_rows, -, 10), -)=22;add(3, 22)=25;greater(1, 25)=False", 
    "count(filter_greater(all_rows, -, 10))=12;diff(1, 12)=-11;less(3, -11);less(3, -11)=False", 
    "count(filter_greater(all_rows, -, 10))=12;diff(1, 12)=-11;eq(3, -11)=False", 
    "count(filter_greater(all_rows, -, 10))=12;diff(1, 12)=-11;greater(3, -11)=True", 
    "count(filter_greater(all_rows, -, 10))=12;diff(3, 12)=-9;less(1, -9);less(1, -9)=False", 
    "count(filter_greater(all_rows, -, 10))=12;diff(3, 12)=-9;eq(1, -9)=False", 
    "count(filter_greater(all_rows, -, 10))=12;diff(3, 12)=-9;greater(1, -9)=True", 
    "count(filter_greater(all_rows, -, 10))=12;add(1, 12)=13;less(3, 13);less(3, 13)=True", 
    "count(filter_greater(all_rows, -, 10))=12;add(1, 12)=13;eq(3, 13)=False", 
    "count(filter_greater(all_rows, -, 10))=12;add(1, 12)=13;greater(3, 13)=False", 
    "count(filter_greater(all_rows, -, 10))=12;add(3, 12)=15;less(1, 15);less(1, 15)=True", 
    "count(filter_greater(all_rows, -, 10))=12;add(3, 12)=15;eq(1, 15)=False", 
    "count(filter_greater(all_rows, -, 10))=12;add(3, 12)=15;greater(1, 15)=False", 
    "add(1, 3)=4;diff(10, 4)=6;less(10, 6);less(10, 6)=False", 
    "add(1, 3)=4;diff(10, 4)=6;eq(10, 6)=False", 
    "add(1, 3)=4;diff(10, 4)=6;greater(10, 6)=True", 
    "add(1, 3)=4;add(10, 4)=14;less(10, 14);less(10, 14)=True", 
    "add(1, 3)=4;add(10, 4)=14;eq(10, 14)=False", 
    "add(1, 3)=4;add(10, 4)=14;greater(10, 14)=False", 
    "min(all_rows, us viewers (million))=9.7;diff(1, 9.7)=-8.7;diff(10, -8.7)=18.7;less(3, 18.7);less(3, 18.7)=True", 
    "min(all_rows, us viewers (million))=9.7;diff(1, 9.7)=-8.7;diff(10, -8.7)=18.7;eq(3, 18.7)=False", 
    "min(all_rows, us viewers (million))=9.7;diff(1, 9.7)=-8.7;diff(10, -8.7)=18.7;greater(3, 18.7)=False", 
    "min(all_rows, us viewers (million))=9.7;diff(1, 9.7)=-8.7;diff(3, -8.7)=11.7;less(10, 11.7);less(10, 11.7)=True", 
    "min(all_rows, us viewers (million))=9.7;diff(1, 9.7)=-8.7;diff(3, -8.7)=11.7;eq(10, 11.7)=False", 
    "min(all_rows, us viewers (million))=9.7;diff(1, 9.7)=-8.7;diff(3, -8.7)=11.7;greater(10, 11.7)=False", 
    "min(all_rows, us viewers (million))=9.7;diff(1, 9.7)=-8.7;add(10, -8.7)=1.3;less(3, 1.3);less(3, 1.3)=False", 
    "min(all_rows, us viewers (million))=9.7;diff(1, 9.7)=-8.7;add(10, -8.7)=1.3;eq(3, 1.3)=False", 
    "min(all_rows, us viewers (million))=9.7;diff(1, 9.7)=-8.7;add(10, -8.7)=1.3;greater(3, 1.3)=True", 
    "min(all_rows, us viewers (million))=9.7;diff(1, 9.7)=-8.7;add(3, -8.7)=-5.7;less(10, -5.7);less(10, -5.7)=False", 
    "min(all_rows, us viewers (million))=9.7;diff(1, 9.7)=-8.7;add(3, -8.7)=-5.7;eq(10, -5.7)=False", 
    "min(all_rows, us viewers (million))=9.7;diff(1, 9.7)=-8.7;add(3, -8.7)=-5.7;greater(10, -5.7)=True", 
    "min(all_rows, us viewers (million))=9.7;diff(3, 9.7)=-6.7;diff(10, -6.7)=16.7;less(1, 16.7);less(1, 16.7)=True", 
    "min(all_rows, us viewers (million))=9.7;diff(3, 9.7)=-6.7;diff(10, -6.7)=16.7;eq(1, 16.7)=False", 
    "min(all_rows, us viewers (million))=9.7;diff(3, 9.7)=-6.7;diff(10, -6.7)=16.7;greater(1, 16.7)=False", 
    "min(all_rows, us viewers (million))=9.7;diff(3, 9.7)=-6.7;diff(1, -6.7)=7.7;less(10, 7.7);less(10, 7.7)=False", 
    "min(all_rows, us viewers (million))=9.7;diff(3, 9.7)=-6.7;diff(1, -6.7)=7.7;eq(10, 7.7)=False", 
    "min(all_rows, us viewers (million))=9.7;diff(3, 9.7)=-6.7;diff(1, -6.7)=7.7;greater(10, 7.7)=True", 
    "min(all_rows, us viewers (million))=9.7;diff(3, 9.7)=-6.7;add(10, -6.7)=3.3;less(1, 3.3);less(1, 3.3)=True", 
    "min(all_rows, us viewers (million))=9.7;diff(3, 9.7)=-6.7;add(10, -6.7)=3.3;eq(1, 3.3)=False", 
    "min(all_rows, us viewers (million))=9.7;diff(3, 9.7)=-6.7;add(10, -6.7)=3.3;greater(1, 3.3)=False", 
    "min(all_rows, us viewers (million))=9.7;diff(3, 9.7)=-6.7;add(1, -6.7)=-5.7;less(10, -5.7);less(10, -5.7)=False", 
    "min(all_rows, us viewers (million))=9.7;diff(3, 9.7)=-6.7;add(1, -6.7)=-5.7;eq(10, -5.7)=False", 
    "min(all_rows, us viewers (million))=9.7;diff(3, 9.7)=-6.7;add(1, -6.7)=-5.7;greater(10, -5.7)=True", 
    "min(all_rows, us viewers (million))=9.7;add(1, 9.7)=10.7;diff(10, 10.7)=-0.7;less(3, -0.7);less(3, -0.7)=False", 
    "min(all_rows, us viewers (million))=9.7;add(1, 9.7)=10.7;diff(10, 10.7)=-0.7;eq(3, -0.7)=False", 
    "min(all_rows, us viewers (million))=9.7;add(1, 9.7)=10.7;diff(10, 10.7)=-0.7;greater(3, -0.7)=True", 
    "min(all_rows, us viewers (million))=9.7;add(1, 9.7)=10.7;diff(3, 10.7)=-7.7;less(10, -7.7);less(10, -7.7)=False", 
    "min(all_rows, us viewers (million))=9.7;add(1, 9.7)=10.7;diff(3, 10.7)=-7.7;eq(10, -7.7)=False", 
    "min(all_rows, us viewers (million))=9.7;add(1, 9.7)=10.7;diff(3, 10.7)=-7.7;greater(10, -7.7)=True", 
    "min(all_rows, us viewers (million))=9.7;add(1, 9.7)=10.7;add(10, 10.7)=20.7;less(3, 20.7);less(3, 20.7)=True", 
    "min(all_rows, us viewers (million))=9.7;add(1, 9.7)=10.7;add(10, 10.7)=20.7;eq(3, 20.7)=False", 
    "min(all_rows, us viewers (million))=9.7;add(1, 9.7)=10.7;add(10, 10.7)=20.7;greater(3, 20.7)=False", 
    "min(all_rows, us viewers (million))=9.7;add(1, 9.7)=10.7;add(3, 10.7)=13.7;less(10, 13.7);less(10, 13.7)=True", 
    "min(all_rows, us viewers (million))=9.7;add(1, 9.7)=10.7;add(3, 10.7)=13.7;eq(10, 13.7)=False", 
    "min(all_rows, us viewers (million))=9.7;add(1, 9.7)=10.7;add(3, 10.7)=13.7;greater(10, 13.7)=False", 
    "min(all_rows, us viewers (million))=9.7;add(3, 9.7)=12.7;diff(10, 12.7)=-2.7;less(1, -2.7);less(1, -2.7)=False", 
    "min(all_rows, us viewers (million))=9.7;add(3, 9.7)=12.7;diff(10, 12.7)=-2.7;eq(1, -2.7)=False", 
    "min(all_rows, us viewers (million))=9.7;add(3, 9.7)=12.7;diff(10, 12.7)=-2.7;greater(1, -2.7)=True", 
    "min(all_rows, us viewers (million))=9.7;add(3, 9.7)=12.7;diff(1, 12.7)=-11.7;less(10, -11.7);less(10, -11.7)=False", 
    "min(all_rows, us viewers (million))=9.7;add(3, 9.7)=12.7;diff(1, 12.7)=-11.7;eq(10, -11.7)=False", 
    "min(all_rows, us viewers (million))=9.7;add(3, 9.7)=12.7;diff(1, 12.7)=-11.7;greater(10, -11.7)=True", 
    "min(all_rows, us viewers (million))=9.7;add(3, 9.7)=12.7;add(10, 12.7)=22.7;less(1, 22.7);less(1, 22.7)=True", 
    "min(all_rows, us viewers (million))=9.7;add(3, 9.7)=12.7;add(10, 12.7)=22.7;eq(1, 22.7)=False", 
    "min(all_rows, us viewers (million))=9.7;add(3, 9.7)=12.7;add(10, 12.7)=22.7;greater(1, 22.7)=False", 
    "min(all_rows, us viewers (million))=9.7;add(3, 9.7)=12.7;add(1, 12.7)=13.7;less(10, 13.7);less(10, 13.7)=True", 
    "min(all_rows, us viewers (million))=9.7;add(3, 9.7)=12.7;add(1, 12.7)=13.7;eq(10, 13.7)=False", 
    "min(all_rows, us viewers (million))=9.7;add(3, 9.7)=12.7;add(1, 12.7)=13.7;greater(10, 13.7)=False", 
    "min(all_rows, -)=1;less(10, 1);and(less(10, 1), greater(1, 3))=False", 
    "min(all_rows, -)=1;diff(10, 1)=9;diff(1, 9)=-8;less(3, -8);less(3, -8)=False", 
    "min(all_rows, -)=1;diff(10, 1)=9;diff(1, 9)=-8;eq(3, -8)=False", 
    "min(all_rows, -)=1;diff(10, 1)=9;diff(1, 9)=-8;greater(3, -8)=True", 
    "min(all_rows, -)=1;diff(10, 1)=9;diff(3, 9)=-6;less(1, -6);less(1, -6)=False", 
    "min(all_rows, -)=1;diff(10, 1)=9;diff(3, 9)=-6;eq(1, -6)=False", 
    "min(all_rows, -)=1;diff(10, 1)=9;diff(3, 9)=-6;greater(1, -6)=True", 
    "min(all_rows, -)=1;diff(10, 1)=9;add(1, 3)=4;less(9, 4);less(9, 4)=False", 
    "min(all_rows, -)=1;diff(10, 1)=9;add(1, 3)=4;eq(9, 4)=False", 
    "min(all_rows, -)=1;diff(10, 1)=9;add(1, 3)=4;greater(9, 4)=True", 
    "min(all_rows, -)=1;diff(10, 1)=9;add(1, 9)=10;less(3, 10);less(3, 10)=True", 
    "min(all_rows, -)=1;diff(10, 1)=9;add(1, 9)=10;eq(3, 10)=False", 
    "min(all_rows, -)=1;diff(10, 1)=9;add(1, 9)=10;greater(3, 10)=False", 
    "min(all_rows, -)=1;diff(10, 1)=9;add(3, 9)=12;less(1, 12);less(1, 12)=True", 
    "min(all_rows, -)=1;diff(10, 1)=9;add(3, 9)=12;eq(1, 12)=False", 
    "min(all_rows, -)=1;diff(10, 1)=9;add(3, 9)=12;greater(1, 12)=False", 
    "min(all_rows, -)=1;diff(1, 1)=0;diff(10, 0)=10;less(3, 10);less(3, 10)=True", 
    "min(all_rows, -)=1;diff(1, 1)=0;diff(10, 0)=10;eq(3, 10)=False", 
    "min(all_rows, -)=1;diff(1, 1)=0;diff(10, 0)=10;greater(3, 10)=False", 
    "min(all_rows, -)=1;diff(1, 1)=0;diff(3, 0)=3;less(10, 3);less(10, 3)=False", 
    "min(all_rows, -)=1;diff(1, 1)=0;diff(3, 0)=3;eq(10, 3)=False", 
    "min(all_rows, -)=1;diff(1, 1)=0;diff(3, 0)=3;greater(10, 3)=True", 
    "min(all_rows, -)=1;diff(1, 1)=0;add(10, 0)=10;less(3, 10);less(3, 10)=True", 
    "min(all_rows, -)=1;diff(1, 1)=0;add(10, 0)=10;eq(3, 10)=False", 
    "min(all_rows, -)=1;diff(1, 1)=0;add(10, 0)=10;greater(3, 10)=False", 
    "min(all_rows, -)=1;diff(1, 1)=0;add(3, 0)=3;less(10, 3);less(10, 3)=False", 
    "min(all_rows, -)=1;diff(1, 1)=0;add(3, 0)=3;eq(10, 3)=False", 
    "min(all_rows, -)=1;diff(1, 1)=0;add(3, 0)=3;greater(10, 3)=True", 
    "min(all_rows, -)=1;diff(3, 1)=2;diff(10, 2)=8;less(1, 8);less(1, 8)=True", 
    "min(all_rows, -)=1;diff(3, 1)=2;diff(10, 2)=8;eq(1, 8)=False", 
    "min(all_rows, -)=1;diff(3, 1)=2;diff(10, 2)=8;greater(1, 8)=False", 
    "min(all_rows, -)=1;diff(3, 1)=2;diff(1, 2)=-1;less(10, -1);less(10, -1)=False", 
    "min(all_rows, -)=1;diff(3, 1)=2;diff(1, 2)=-1;eq(10, -1)=False", 
    "min(all_rows, -)=1;diff(3, 1)=2;diff(1, 2)=-1;greater(10, -1)=True", 
    "min(all_rows, -)=1;diff(3, 1)=2;add(10, 2)=12;less(1, 12);less(1, 12)=True", 
    "min(all_rows, -)=1;diff(3, 1)=2;add(10, 2)=12;eq(1, 12)=False", 
    "min(all_rows, -)=1;diff(3, 1)=2;add(10, 2)=12;greater(1, 12)=False", 
    "min(all_rows, -)=1;diff(3, 1)=2;add(1, 2)=3;less(10, 3);less(10, 3)=False", 
    "min(all_rows, -)=1;diff(3, 1)=2;add(1, 2)=3;eq(10, 3)=False", 
    "min(all_rows, -)=1;diff(3, 1)=2;add(1, 2)=3;greater(10, 3)=True", 
    "min(all_rows, -)=1;and(eq(10, 1), greater(1, 3))=False", 
    "min(all_rows, -)=1;add(10, 1)=11;diff(1, 11)=-10;less(3, -10);less(3, -10)=False", 
    "min(all_rows, -)=1;add(10, 1)=11;diff(1, 11)=-10;eq(3, -10)=False", 
    "min(all_rows, -)=1;add(10, 1)=11;diff(1, 11)=-10;greater(3, -10)=True", 
    "min(all_rows, -)=1;add(10, 1)=11;diff(3, 11)=-8;less(1, -8);less(1, -8)=False", 
    "min(all_rows, -)=1;add(10, 1)=11;diff(3, 11)=-8;eq(1, -8)=False", 
    "min(all_rows, -)=1;add(10, 1)=11;diff(3, 11)=-8;greater(1, -8)=True", 
    "min(all_rows, -)=1;add(10, 1)=11;add(1, 3)=4;less(11, 4);less(11, 4)=False", 
    "min(all_rows, -)=1;add(10, 1)=11;add(1, 3)=4;eq(11, 4)=False", 
    "min(all_rows, -)=1;add(10, 1)=11;add(1, 3)=4;greater(11, 4)=True", 
    "min(all_rows, -)=1;add(10, 1)=11;add(1, 11)=12;less(3, 12);less(3, 12)=True", 
    "min(all_rows, -)=1;add(10, 1)=11;add(1, 11)=12;eq(3, 12)=False", 
    "min(all_rows, -)=1;add(10, 1)=11;add(1, 11)=12;greater(3, 12)=False", 
    "min(all_rows, -)=1;add(10, 1)=11;add(3, 11)=14;less(1, 14);less(1, 14)=True", 
    "min(all_rows, -)=1;add(10, 1)=11;add(3, 11)=14;eq(1, 14)=False", 
    "min(all_rows, -)=1;add(10, 1)=11;add(3, 11)=14;greater(1, 14)=False", 
    "min(all_rows, -)=1;add(1, 3)=4;diff(10, 4)=6;less(1, 6);less(1, 6)=True", 
    "min(all_rows, -)=1;add(1, 3)=4;diff(10, 4)=6;eq(1, 6)=False", 
    "min(all_rows, -)=1;add(1, 3)=4;diff(10, 4)=6;greater(1, 6)=False", 
    "min(all_rows, -)=1;add(1, 3)=4;diff(1, 4)=-3;less(10, -3);less(10, -3)=False", 
    "min(all_rows, -)=1;add(1, 3)=4;diff(1, 4)=-3;eq(10, -3)=False", 
    "min(all_rows, -)=1;add(1, 3)=4;diff(1, 4)=-3;greater(10, -3)=True", 
    "min(all_rows, -)=1;add(1, 3)=4;add(10, 4)=14;less(1, 14);less(1, 14)=True", 
    "min(all_rows, -)=1;add(1, 3)=4;add(10, 4)=14;eq(1, 14)=False", 
    "min(all_rows, -)=1;add(1, 3)=4;add(10, 4)=14;greater(1, 14)=False", 
    "min(all_rows, -)=1;add(1, 3)=4;add(1, 4)=5;less(10, 5);less(10, 5)=False", 
    "min(all_rows, -)=1;add(1, 3)=4;add(1, 4)=5;eq(10, 5)=False", 
    "min(all_rows, -)=1;add(1, 3)=4;add(1, 4)=5;greater(10, 5)=True", 
    "min(all_rows, -)=1;add(1, 1)=2;diff(10, 2)=8;less(3, 8);less(3, 8)=True", 
    "min(all_rows, -)=1;add(1, 1)=2;diff(10, 2)=8;eq(3, 8)=False", 
    "min(all_rows, -)=1;add(1, 1)=2;diff(10, 2)=8;greater(3, 8)=False", 
    "min(all_rows, -)=1;add(1, 1)=2;diff(3, 2)=1;less(10, 1);less(10, 1)=False", 
    "min(all_rows, -)=1;add(1, 1)=2;diff(3, 2)=1;eq(10, 1)=False", 
    "min(all_rows, -)=1;add(1, 1)=2;diff(3, 2)=1;greater(10, 1)=True", 
    "min(all_rows, -)=1;add(1, 1)=2;add(10, 2)=12;less(3, 12);less(3, 12)=True", 
    "min(all_rows, -)=1;add(1, 1)=2;add(10, 2)=12;eq(3, 12)=False", 
    "min(all_rows, -)=1;add(1, 1)=2;add(10, 2)=12;greater(3, 12)=False", 
    "min(all_rows, -)=1;add(1, 1)=2;add(3, 2)=5;less(10, 5);less(10, 5)=False", 
    "min(all_rows, -)=1;add(1, 1)=2;add(3, 2)=5;eq(10, 5)=False", 
    "min(all_rows, -)=1;add(1, 1)=2;add(3, 2)=5;greater(10, 5)=True", 
    "min(all_rows, -)=1;add(3, 1)=4;diff(10, 4)=6;less(1, 6);less(1, 6)=True", 
    "min(all_rows, -)=1;add(3, 1)=4;diff(10, 4)=6;eq(1, 6)=False", 
    "min(all_rows, -)=1;add(3, 1)=4;diff(10, 4)=6;greater(1, 6)=False", 
    "min(all_rows, -)=1;add(3, 1)=4;diff(1, 4)=-3;less(10, -3);less(10, -3)=False", 
    "min(all_rows, -)=1;add(3, 1)=4;diff(1, 4)=-3;eq(10, -3)=False", 
    "min(all_rows, -)=1;add(3, 1)=4;diff(1, 4)=-3;greater(10, -3)=True", 
    "min(all_rows, -)=1;add(3, 1)=4;add(10, 4)=14;less(1, 14);less(1, 14)=True", 
    "min(all_rows, -)=1;add(3, 1)=4;add(10, 4)=14;eq(1, 14)=False", 
    "min(all_rows, -)=1;add(3, 1)=4;add(10, 4)=14;greater(1, 14)=False", 
    "min(all_rows, -)=1;add(3, 1)=4;add(1, 4)=5;less(10, 5);less(10, 5)=False", 
    "min(all_rows, -)=1;add(3, 1)=4;add(1, 4)=5;eq(10, 5)=False", 
    "min(all_rows, -)=1;add(3, 1)=4;add(1, 4)=5;greater(10, 5)=True", 
    "min(all_rows, -)=1;and(greater(10, 1), greater(1, 3))=False", 
    "sum(all_rows, us viewers (million))=259.46;diff(1, 259.46)=-258.46;diff(10, -258.46)=268.46;less(3, 268.46);less(3, 268.46)=True", 
    "sum(all_rows, us viewers (million))=259.46;diff(1, 259.46)=-258.46;diff(10, -258.46)=268.46;eq(3, 268.46)=False", 
    "sum(all_rows, us viewers (million))=259.46;diff(1, 259.46)=-258.46;diff(10, -258.46)=268.46;greater(3, 268.46)=False", 
    "sum(all_rows, us viewers (million))=259.46;diff(1, 259.46)=-258.46;diff(3, -258.46)=261.46;less(10, 261.46);less(10, 261.46)=True", 
    "sum(all_rows, us viewers (million))=259.46;diff(1, 259.46)=-258.46;diff(3, -258.46)=261.46;eq(10, 261.46)=False", 
    "sum(all_rows, us viewers (million))=259.46;diff(1, 259.46)=-258.46;diff(3, -258.46)=261.46;greater(10, 261.46)=False", 
    "sum(all_rows, us viewers (million))=259.46;diff(1, 259.46)=-258.46;add(10, -258.46)=-248.46;less(3, -248.46);less(3, -248.46)=False", 
    "sum(all_rows, us viewers (million))=259.46;diff(1, 259.46)=-258.46;add(10, -258.46)=-248.46;eq(3, -248.46)=False", 
    "sum(all_rows, us viewers (million))=259.46;diff(1, 259.46)=-258.46;add(10, -258.46)=-248.46;greater(3, -248.46)=True", 
    "sum(all_rows, us viewers (million))=259.46;diff(1, 259.46)=-258.46;add(3, -258.46)=-255.46;less(10, -255.46);less(10, -255.46)=False", 
    "sum(all_rows, us viewers (million))=259.46;diff(1, 259.46)=-258.46;add(3, -258.46)=-255.46;eq(10, -255.46)=False", 
    "sum(all_rows, us viewers (million))=259.46;diff(1, 259.46)=-258.46;add(3, -258.46)=-255.46;greater(10, -255.46)=True", 
    "sum(all_rows, us viewers (million))=259.46;diff(3, 259.46)=-256.46;diff(10, -256.46)=266.46;less(1, 266.46);less(1, 266.46)=True", 
    "sum(all_rows, us viewers (million))=259.46;diff(3, 259.46)=-256.46;diff(10, -256.46)=266.46;eq(1, 266.46)=False", 
    "sum(all_rows, us viewers (million))=259.46;diff(3, 259.46)=-256.46;diff(10, -256.46)=266.46;greater(1, 266.46)=False", 
    "sum(all_rows, us viewers (million))=259.46;diff(3, 259.46)=-256.46;diff(1, -256.46)=257.46;less(10, 257.46);less(10, 257.46)=True", 
    "sum(all_rows, us viewers (million))=259.46;diff(3, 259.46)=-256.46;diff(1, -256.46)=257.46;eq(10, 257.46)=False", 
    "sum(all_rows, us viewers (million))=259.46;diff(3, 259.46)=-256.46;diff(1, -256.46)=257.46;greater(10, 257.46)=False", 
    "sum(all_rows, us viewers (million))=259.46;diff(3, 259.46)=-256.46;add(10, -256.46)=-246.46;less(1, -246.46);less(1, -246.46)=False", 
    "sum(all_rows, us viewers (million))=259.46;diff(3, 259.46)=-256.46;add(10, -256.46)=-246.46;eq(1, -246.46)=False", 
    "sum(all_rows, us viewers (million))=259.46;diff(3, 259.46)=-256.46;add(10, -256.46)=-246.46;greater(1, -246.46)=True", 
    "sum(all_rows, us viewers (million))=259.46;diff(3, 259.46)=-256.46;add(1, -256.46)=-255.46;less(10, -255.46);less(10, -255.46)=False", 
    "sum(all_rows, us viewers (million))=259.46;diff(3, 259.46)=-256.46;add(1, -256.46)=-255.46;eq(10, -255.46)=False", 
    "sum(all_rows, us viewers (million))=259.46;diff(3, 259.46)=-256.46;add(1, -256.46)=-255.46;greater(10, -255.46)=True", 
    "sum(all_rows, us viewers (million))=259.46;add(1, 259.46)=260.46;diff(10, 260.46)=-250.46;less(3, -250.46);less(3, -250.46)=False", 
    "sum(all_rows, us viewers (million))=259.46;add(1, 259.46)=260.46;diff(10, 260.46)=-250.46;eq(3, -250.46)=False", 
    "sum(all_rows, us viewers (million))=259.46;add(1, 259.46)=260.46;diff(10, 260.46)=-250.46;greater(3, -250.46)=True", 
    "sum(all_rows, us viewers (million))=259.46;add(1, 259.46)=260.46;diff(3, 260.46)=-257.46;less(10, -257.46);less(10, -257.46)=False", 
    "sum(all_rows, us viewers (million))=259.46;add(1, 259.46)=260.46;diff(3, 260.46)=-257.46;eq(10, -257.46)=False", 
    "sum(all_rows, us viewers (million))=259.46;add(1, 259.46)=260.46;diff(3, 260.46)=-257.46;greater(10, -257.46)=True", 
    "sum(all_rows, us viewers (million))=259.46;add(1, 259.46)=260.46;add(10, 260.46)=270.46;less(3, 270.46);less(3, 270.46)=True", 
    "sum(all_rows, us viewers (million))=259.46;add(1, 259.46)=260.46;add(10, 260.46)=270.46;eq(3, 270.46)=False", 
    "sum(all_rows, us viewers (million))=259.46;add(1, 259.46)=260.46;add(10, 260.46)=270.46;greater(3, 270.46)=False", 
    "sum(all_rows, us viewers (million))=259.46;add(1, 259.46)=260.46;add(3, 260.46)=263.46;less(10, 263.46);less(10, 263.46)=True", 
    "sum(all_rows, us viewers (million))=259.46;add(1, 259.46)=260.46;add(3, 260.46)=263.46;eq(10, 263.46)=False", 
    "sum(all_rows, us viewers (million))=259.46;add(1, 259.46)=260.46;add(3, 260.46)=263.46;greater(10, 263.46)=False", 
    "sum(all_rows, us viewers (million))=259.46;add(3, 259.46)=262.46;diff(10, 262.46)=-252.46;less(1, -252.46);less(1, -252.46)=False", 
    "sum(all_rows, us viewers (million))=259.46;add(3, 259.46)=262.46;diff(10, 262.46)=-252.46;eq(1, -252.46)=False", 
    "sum(all_rows, us viewers (million))=259.46;add(3, 259.46)=262.46;diff(10, 262.46)=-252.46;greater(1, -252.46)=True", 
    "sum(all_rows, us viewers (million))=259.46;add(3, 259.46)=262.46;diff(1, 262.46)=-261.46;less(10, -261.46);less(10, -261.46)=False", 
    "sum(all_rows, us viewers (million))=259.46;add(3, 259.46)=262.46;diff(1, 262.46)=-261.46;eq(10, -261.46)=False", 
    "sum(all_rows, us viewers (million))=259.46;add(3, 259.46)=262.46;diff(1, 262.46)=-261.46;greater(10, -261.46)=True", 
    "sum(all_rows, us viewers (million))=259.46;add(3, 259.46)=262.46;add(10, 262.46)=272.46;less(1, 272.46);less(1, 272.46)=True", 
    "sum(all_rows, us viewers (million))=259.46;add(3, 259.46)=262.46;add(10, 262.46)=272.46;eq(1, 272.46)=False", 
    "sum(all_rows, us viewers (million))=259.46;add(3, 259.46)=262.46;add(10, 262.46)=272.46;greater(1, 272.46)=False", 
    "sum(all_rows, us viewers (million))=259.46;add(3, 259.46)=262.46;add(1, 262.46)=263.46;less(10, 263.46);less(10, 263.46)=True", 
    "sum(all_rows, us viewers (million))=259.46;add(3, 259.46)=262.46;add(1, 262.46)=263.46;eq(10, 263.46)=False", 
    "sum(all_rows, us viewers (million))=259.46;add(3, 259.46)=262.46;add(1, 262.46)=263.46;greater(10, 263.46)=False", 
    "sum(all_rows, -)=253;less(10, 253);and(less(10, 253), greater(1, 3))=False", 
    "sum(all_rows, -)=253;diff(10, 253)=-243;diff(1, -243)=244;less(3, 244);less(3, 244)=True", 
    "sum(all_rows, -)=253;diff(10, 253)=-243;diff(1, -243)=244;eq(3, 244)=False", 
    "sum(all_rows, -)=253;diff(10, 253)=-243;diff(1, -243)=244;greater(3, 244)=False", 
    "sum(all_rows, -)=253;diff(10, 253)=-243;diff(3, -243)=246;less(1, 246);less(1, 246)=True", 
    "sum(all_rows, -)=253;diff(10, 253)=-243;diff(3, -243)=246;eq(1, 246)=False", 
    "sum(all_rows, -)=253;diff(10, 253)=-243;diff(3, -243)=246;greater(1, 246)=False", 
    "sum(all_rows, -)=253;diff(10, 253)=-243;add(1, 3)=4;less(-243, 4);less(-243, 4)=True", 
    "sum(all_rows, -)=253;diff(10, 253)=-243;add(1, 3)=4;eq(-243, 4)=False", 
    "sum(all_rows, -)=253;diff(10, 253)=-243;add(1, 3)=4;greater(-243, 4)=False", 
    "sum(all_rows, -)=253;diff(10, 253)=-243;add(1, -243)=-242;less(3, -242);less(3, -242)=False", 
    "sum(all_rows, -)=253;diff(10, 253)=-243;add(1, -243)=-242;eq(3, -242)=False", 
    "sum(all_rows, -)=253;diff(10, 253)=-243;add(1, -243)=-242;greater(3, -242)=True", 
    "sum(all_rows, -)=253;diff(10, 253)=-243;add(3, -243)=-240;less(1, -240);less(1, -240)=False", 
    "sum(all_rows, -)=253;diff(10, 253)=-243;add(3, -243)=-240;eq(1, -240)=False", 
    "sum(all_rows, -)=253;diff(10, 253)=-243;add(3, -243)=-240;greater(1, -240)=True", 
    "sum(all_rows, -)=253;diff(1, 253)=-252;diff(10, -252)=262;less(3, 262);less(3, 262)=True", 
    "sum(all_rows, -)=253;diff(1, 253)=-252;diff(10, -252)=262;eq(3, 262)=False", 
    "sum(all_rows, -)=253;diff(1, 253)=-252;diff(10, -252)=262;greater(3, 262)=False", 
    "sum(all_rows, -)=253;diff(1, 253)=-252;diff(3, -252)=255;less(10, 255);less(10, 255)=True", 
    "sum(all_rows, -)=253;diff(1, 253)=-252;diff(3, -252)=255;eq(10, 255)=False", 
    "sum(all_rows, -)=253;diff(1, 253)=-252;diff(3, -252)=255;greater(10, 255)=False", 
    "sum(all_rows, -)=253;diff(1, 253)=-252;add(10, -252)=-242;less(3, -242);less(3, -242)=False", 
    "sum(all_rows, -)=253;diff(1, 253)=-252;add(10, -252)=-242;eq(3, -242)=False", 
    "sum(all_rows, -)=253;diff(1, 253)=-252;add(10, -252)=-242;greater(3, -242)=True", 
    "sum(all_rows, -)=253;diff(1, 253)=-252;add(3, -252)=-249;less(10, -249);less(10, -249)=False", 
    "sum(all_rows, -)=253;diff(1, 253)=-252;add(3, -252)=-249;eq(10, -249)=False", 
    "sum(all_rows, -)=253;diff(1, 253)=-252;add(3, -252)=-249;greater(10, -249)=True", 
    "sum(all_rows, -)=253;diff(3, 253)=-250;diff(10, -250)=260;less(1, 260);less(1, 260)=True", 
    "sum(all_rows, -)=253;diff(3, 253)=-250;diff(10, -250)=260;eq(1, 260)=False", 
    "sum(all_rows, -)=253;diff(3, 253)=-250;diff(10, -250)=260;greater(1, 260)=False", 
    "sum(all_rows, -)=253;diff(3, 253)=-250;diff(1, -250)=251;less(10, 251);less(10, 251)=True", 
    "sum(all_rows, -)=253;diff(3, 253)=-250;diff(1, -250)=251;eq(10, 251)=False", 
    "sum(all_rows, -)=253;diff(3, 253)=-250;diff(1, -250)=251;greater(10, 251)=False", 
    "sum(all_rows, -)=253;diff(3, 253)=-250;add(10, -250)=-240;less(1, -240);less(1, -240)=False", 
    "sum(all_rows, -)=253;diff(3, 253)=-250;add(10, -250)=-240;eq(1, -240)=False", 
    "sum(all_rows, -)=253;diff(3, 253)=-250;add(10, -250)=-240;greater(1, -240)=True", 
    "sum(all_rows, -)=253;diff(3, 253)=-250;add(1, -250)=-249;less(10, -249);less(10, -249)=False", 
    "sum(all_rows, -)=253;diff(3, 253)=-250;add(1, -250)=-249;eq(10, -249)=False", 
    "sum(all_rows, -)=253;diff(3, 253)=-250;add(1, -250)=-249;greater(10, -249)=True", 
    "sum(all_rows, -)=253;and(eq(10, 253), greater(1, 3))=False", 
    "sum(all_rows, -)=253;add(10, 253)=263;diff(1, 263)=-262;less(3, -262);less(3, -262)=False", 
    "sum(all_rows, -)=253;add(10, 253)=263;diff(1, 263)=-262;eq(3, -262)=False", 
    "sum(all_rows, -)=253;add(10, 253)=263;diff(1, 263)=-262;greater(3, -262)=True", 
    "sum(all_rows, -)=253;add(10, 253)=263;diff(3, 263)=-260;less(1, -260);less(1, -260)=False", 
    "sum(all_rows, -)=253;add(10, 253)=263;diff(3, 263)=-260;eq(1, -260)=False", 
    "sum(all_rows, -)=253;add(10, 253)=263;diff(3, 263)=-260;greater(1, -260)=True", 
    "sum(all_rows, -)=253;add(10, 253)=263;add(1, 3)=4;less(263, 4);less(263, 4)=False", 
    "sum(all_rows, -)=253;add(10, 253)=263;add(1, 3)=4;eq(263, 4)=False", 
    "sum(all_rows, -)=253;add(10, 253)=263;add(1, 3)=4;greater(263, 4)=True", 
    "sum(all_rows, -)=253;add(10, 253)=263;add(1, 263)=264;less(3, 264);less(3, 264)=True", 
    "sum(all_rows, -)=253;add(10, 253)=263;add(1, 263)=264;eq(3, 264)=False", 
    "sum(all_rows, -)=253;add(10, 253)=263;add(1, 263)=264;greater(3, 264)=False", 
    "sum(all_rows, -)=253;add(10, 253)=263;add(3, 263)=266;less(1, 266);less(1, 266)=True", 
    "sum(all_rows, -)=253;add(10, 253)=263;add(3, 263)=266;eq(1, 266)=False", 
    "sum(all_rows, -)=253;add(10, 253)=263;add(3, 263)=266;greater(1, 266)=False", 
    "sum(all_rows, -)=253;add(1, 3)=4;diff(10, 4)=6;less(253, 6);less(253, 6)=False", 
    "sum(all_rows, -)=253;add(1, 3)=4;diff(10, 4)=6;eq(253, 6)=False", 
    "sum(all_rows, -)=253;add(1, 3)=4;diff(10, 4)=6;greater(253, 6)=True", 
    "sum(all_rows, -)=253;add(1, 3)=4;diff(253, 4)=249;less(10, 249);less(10, 249)=True", 
    "sum(all_rows, -)=253;add(1, 3)=4;diff(253, 4)=249;eq(10, 249)=False", 
    "sum(all_rows, -)=253;add(1, 3)=4;diff(253, 4)=249;greater(10, 249)=False", 
    "sum(all_rows, -)=253;add(1, 3)=4;add(10, 4)=14;less(253, 14);less(253, 14)=False", 
    "sum(all_rows, -)=253;add(1, 3)=4;add(10, 4)=14;eq(253, 14)=False", 
    "sum(all_rows, -)=253;add(1, 3)=4;add(10, 4)=14;greater(253, 14)=True", 
    "sum(all_rows, -)=253;add(1, 3)=4;add(253, 4)=257;less(10, 257);less(10, 257)=True", 
    "sum(all_rows, -)=253;add(1, 3)=4;add(253, 4)=257;eq(10, 257)=False", 
    "sum(all_rows, -)=253;add(1, 3)=4;add(253, 4)=257;greater(10, 257)=False", 
    "sum(all_rows, -)=253;add(1, 253)=254;diff(10, 254)=-244;less(3, -244);less(3, -244)=False", 
    "sum(all_rows, -)=253;add(1, 253)=254;diff(10, 254)=-244;eq(3, -244)=False", 
    "sum(all_rows, -)=253;add(1, 253)=254;diff(10, 254)=-244;greater(3, -244)=True", 
    "sum(all_rows, -)=253;add(1, 253)=254;diff(3, 254)=-251;less(10, -251);less(10, -251)=False", 
    "sum(all_rows, -)=253;add(1, 253)=254;diff(3, 254)=-251;eq(10, -251)=False", 
    "sum(all_rows, -)=253;add(1, 253)=254;diff(3, 254)=-251;greater(10, -251)=True", 
    "sum(all_rows, -)=253;add(1, 253)=254;add(10, 254)=264;less(3, 264);less(3, 264)=True", 
    "sum(all_rows, -)=253;add(1, 253)=254;add(10, 254)=264;eq(3, 264)=False", 
    "sum(all_rows, -)=253;add(1, 253)=254;add(10, 254)=264;greater(3, 264)=False", 
    "sum(all_rows, -)=253;add(1, 253)=254;add(3, 254)=257;less(10, 257);less(10, 257)=True", 
    "sum(all_rows, -)=253;add(1, 253)=254;add(3, 254)=257;eq(10, 257)=False", 
    "sum(all_rows, -)=253;add(1, 253)=254;add(3, 254)=257;greater(10, 257)=False", 
    "sum(all_rows, -)=253;add(3, 253)=256;diff(10, 256)=-246;less(1, -246);less(1, -246)=False", 
    "sum(all_rows, -)=253;add(3, 253)=256;diff(10, 256)=-246;eq(1, -246)=False", 
    "sum(all_rows, -)=253;add(3, 253)=256;diff(10, 256)=-246;greater(1, -246)=True", 
    "sum(all_rows, -)=253;add(3, 253)=256;diff(1, 256)=-255;less(10, -255);less(10, -255)=False", 
    "sum(all_rows, -)=253;add(3, 253)=256;diff(1, 256)=-255;eq(10, -255)=False", 
    "sum(all_rows, -)=253;add(3, 253)=256;diff(1, 256)=-255;greater(10, -255)=True", 
    "sum(all_rows, -)=253;add(3, 253)=256;add(10, 256)=266;less(1, 266);less(1, 266)=True", 
    "sum(all_rows, -)=253;add(3, 253)=256;add(10, 256)=266;eq(1, 266)=False", 
    "sum(all_rows, -)=253;add(3, 253)=256;add(10, 256)=266;greater(1, 266)=False", 
    "sum(all_rows, -)=253;add(3, 253)=256;add(1, 256)=257;less(10, 257);less(10, 257)=True", 
    "sum(all_rows, -)=253;add(3, 253)=256;add(1, 256)=257;eq(10, 257)=False", 
    "sum(all_rows, -)=253;add(3, 253)=256;add(1, 256)=257;greater(10, 257)=False", 
    "sum(all_rows, -)=253;and(greater(10, 253), greater(1, 3))=False", 
    "add(1, 3)=4;diff(10, 4)=6;max(all_rows, -)=22;less(6, 22);less(6, 22)=True", 
    "add(1, 3)=4;diff(10, 4)=6;max(all_rows, -)=22;eq(6, 22)=False", 
    "add(1, 3)=4;diff(10, 4)=6;max(all_rows, -)=22;greater(6, 22)=False", 
    "add(1, 3)=4;add(10, 4)=14;max(all_rows, -)=22;less(14, 22);less(14, 22)=True", 
    "add(1, 3)=4;add(10, 4)=14;max(all_rows, -)=22;eq(14, 22)=False", 
    "add(1, 3)=4;add(10, 4)=14;max(all_rows, -)=22;greater(14, 22)=False", 
    "add(1, 3)=4;min(filter_less(all_rows, -, 10), us viewers (million))=11.34;less(4, 11.34);less(4, 11.34)=True", 
    "add(1, 3)=4;min(filter_less(all_rows, -, 10), us viewers (million))=11.34;eq(4, 11.34)=False", 
    "add(1, 3)=4;min(filter_less(all_rows, -, 10), us viewers (million))=11.34;greater(4, 11.34)=False", 
    "add(1, 3)=4;min(filter_less(all_rows, -, 10), -)=1;less(4, 1);less(4, 1)=False", 
    "add(1, 3)=4;min(filter_less(all_rows, -, 10), -)=1;eq(4, 1)=False", 
    "add(1, 3)=4;min(filter_less(all_rows, -, 10), -)=1;greater(4, 1)=True", 
    "add(1, 3)=4;sum(filter_less(all_rows, -, 10), us viewers (million))=110.01;less(4, 110.01);less(4, 110.01)=True", 
    "add(1, 3)=4;sum(filter_less(all_rows, -, 10), us viewers (million))=110.01;eq(4, 110.01)=False", 
    "add(1, 3)=4;sum(filter_less(all_rows, -, 10), us viewers (million))=110.01;greater(4, 110.01)=False", 
    "add(1, 3)=4;sum(filter_less(all_rows, -, 10), -)=45;less(4, 45);less(4, 45)=True", 
    "add(1, 3)=4;sum(filter_less(all_rows, -, 10), -)=45;eq(4, 45)=False", 
    "add(1, 3)=4;sum(filter_less(all_rows, -, 10), -)=45;greater(4, 45)=False", 
    "add(1, 3)=4;max(filter_less(all_rows, -, 10), us viewers (million))=13.22;less(4, 13.22);less(4, 13.22)=True", 
    "add(1, 3)=4;max(filter_less(all_rows, -, 10), us viewers (million))=13.22;eq(4, 13.22)=False", 
    "add(1, 3)=4;max(filter_less(all_rows, -, 10), us viewers (million))=13.22;greater(4, 13.22)=False", 
    "add(1, 3)=4;max(filter_less(all_rows, -, 10), -)=9;less(4, 9);less(4, 9)=True", 
    "add(1, 3)=4;max(filter_less(all_rows, -, 10), -)=9;eq(4, 9)=False", 
    "add(1, 3)=4;max(filter_less(all_rows, -, 10), -)=9;greater(4, 9)=False", 
    "add(1, 3)=4;count(filter_less(all_rows, -, 10))=9;less(4, 9);less(4, 9)=True", 
    "add(1, 3)=4;count(filter_less(all_rows, -, 10))=9;eq(4, 9)=False", 
    "add(1, 3)=4;count(filter_less(all_rows, -, 10))=9;greater(4, 9)=False", 
    "add(1, 3)=4;max(all_rows, us viewers (million))=13.7;diff(4, 13.7)=-9.7;less(10, -9.7);less(10, -9.7)=False", 
    "add(1, 3)=4;max(all_rows, us viewers (million))=13.7;diff(4, 13.7)=-9.7;eq(10, -9.7)=False", 
    "add(1, 3)=4;max(all_rows, us viewers (million))=13.7;diff(4, 13.7)=-9.7;greater(10, -9.7)=True", 
    "add(1, 3)=4;max(all_rows, us viewers (million))=13.7;add(4, 13.7)=17.7;less(10, 17.7);less(10, 17.7)=True", 
    "add(1, 3)=4;max(all_rows, us viewers (million))=13.7;add(4, 13.7)=17.7;eq(10, 17.7)=False", 
    "add(1, 3)=4;max(all_rows, us viewers (million))=13.7;add(4, 13.7)=17.7;greater(10, 17.7)=False", 
    "add(1, 3)=4;max(all_rows, -)=22;diff(10, 22)=-12;less(4, -12);less(4, -12)=False", 
    "add(1, 3)=4;max(all_rows, -)=22;diff(10, 22)=-12;eq(4, -12)=False", 
    "add(1, 3)=4;max(all_rows, -)=22;diff(10, 22)=-12;greater(4, -12)=True", 
    "add(1, 3)=4;max(all_rows, -)=22;diff(4, 22)=-18;less(10, -18);less(10, -18)=False", 
    "add(1, 3)=4;max(all_rows, -)=22;diff(4, 22)=-18;eq(10, -18)=False", 
    "add(1, 3)=4;max(all_rows, -)=22;diff(4, 22)=-18;greater(10, -18)=True", 
    "add(1, 3)=4;max(all_rows, -)=22;add(10, 22)=32;less(4, 32);less(4, 32)=True", 
    "add(1, 3)=4;max(all_rows, -)=22;add(10, 22)=32;eq(4, 32)=False", 
    "add(1, 3)=4;max(all_rows, -)=22;add(10, 22)=32;greater(4, 32)=False", 
    "add(1, 3)=4;max(all_rows, -)=22;add(4, 22)=26;less(10, 26);less(10, 26)=True", 
    "add(1, 3)=4;max(all_rows, -)=22;add(4, 22)=26;eq(10, 26)=False", 
    "add(1, 3)=4;max(all_rows, -)=22;add(4, 22)=26;greater(10, 26)=False", 
    "add(1, 3)=4;count(filter_eq(all_rows, -, 10))=1;less(4, 1);less(4, 1)=False", 
    "add(1, 3)=4;count(filter_eq(all_rows, -, 10))=1;eq(4, 1)=False", 
    "add(1, 3)=4;count(filter_eq(all_rows, -, 10))=1;greater(4, 1)=True", 
    "add(1, 3)=4;hop(filter_eq(all_rows, -, 10), us viewers (million))=12.56;less(4, 12.56);less(4, 12.56)=True", 
    "add(1, 3)=4;hop(filter_eq(all_rows, -, 10), us viewers (million))=12.56;eq(4, 12.56)=False", 
    "add(1, 3)=4;hop(filter_eq(all_rows, -, 10), us viewers (million))=12.56;greater(4, 12.56)=False", 
    "add(1, 3)=4;hop(filter_eq(all_rows, -, 10), -)=10;less(4, 10);less(4, 10)=True", 
    "add(1, 3)=4;hop(filter_eq(all_rows, -, 10), -)=10;eq(4, 10)=False", 
    "add(1, 3)=4;hop(filter_eq(all_rows, -, 10), -)=10;greater(4, 10)=False", 
    "add(1, 3)=4;count(all_rows)=22;diff(4, 22)=-18;less(10, -18);less(10, -18)=False", 
    "add(1, 3)=4;count(all_rows)=22;diff(4, 22)=-18;eq(10, -18)=False", 
    "add(1, 3)=4;count(all_rows)=22;diff(4, 22)=-18;greater(10, -18)=True", 
    "add(1, 3)=4;count(all_rows)=22;add(4, 22)=26;less(10, 26);less(10, 26)=True", 
    "add(1, 3)=4;count(all_rows)=22;add(4, 22)=26;eq(10, 26)=False", 
    "add(1, 3)=4;count(all_rows)=22;add(4, 22)=26;greater(10, 26)=False", 
    "add(1, 3)=4;min(filter_less_eq(all_rows, -, 10), us viewers (million))=11.34;less(4, 11.34);less(4, 11.34)=True", 
    "add(1, 3)=4;min(filter_less_eq(all_rows, -, 10), us viewers (million))=11.34;eq(4, 11.34)=False", 
    "add(1, 3)=4;min(filter_less_eq(all_rows, -, 10), us viewers (million))=11.34;greater(4, 11.34)=False", 
    "add(1, 3)=4;min(filter_less_eq(all_rows, -, 10), -)=1;less(4, 1);less(4, 1)=False", 
    "add(1, 3)=4;min(filter_less_eq(all_rows, -, 10), -)=1;eq(4, 1)=False", 
    "add(1, 3)=4;min(filter_less_eq(all_rows, -, 10), -)=1;greater(4, 1)=True", 
    "add(1, 3)=4;sum(filter_less_eq(all_rows, -, 10), us viewers (million))=122.57;less(4, 122.57);less(4, 122.57)=True", 
    "add(1, 3)=4;sum(filter_less_eq(all_rows, -, 10), us viewers (million))=122.57;eq(4, 122.57)=False", 
    "add(1, 3)=4;sum(filter_less_eq(all_rows, -, 10), us viewers (million))=122.57;greater(4, 122.57)=False", 
    "add(1, 3)=4;sum(filter_less_eq(all_rows, -, 10), -)=55;less(4, 55);less(4, 55)=True", 
    "add(1, 3)=4;sum(filter_less_eq(all_rows, -, 10), -)=55;eq(4, 55)=False", 
    "add(1, 3)=4;sum(filter_less_eq(all_rows, -, 10), -)=55;greater(4, 55)=False", 
    "add(1, 3)=4;max(filter_less_eq(all_rows, -, 10), us viewers (million))=13.22;less(4, 13.22);less(4, 13.22)=True", 
    "add(1, 3)=4;max(filter_less_eq(all_rows, -, 10), us viewers (million))=13.22;eq(4, 13.22)=False", 
    "add(1, 3)=4;max(filter_less_eq(all_rows, -, 10), us viewers (million))=13.22;greater(4, 13.22)=False", 
    "add(1, 3)=4;max(filter_less_eq(all_rows, -, 10), -)=10;less(4, 10);less(4, 10)=True", 
    "add(1, 3)=4;max(filter_less_eq(all_rows, -, 10), -)=10;eq(4, 10)=False", 
    "add(1, 3)=4;max(filter_less_eq(all_rows, -, 10), -)=10;greater(4, 10)=False", 
    "add(1, 3)=4;count(filter_less_eq(all_rows, -, 10))=10;less(4, 10);less(4, 10)=True", 
    "add(1, 3)=4;count(filter_less_eq(all_rows, -, 10))=10;eq(4, 10)=False", 
    "add(1, 3)=4;count(filter_less_eq(all_rows, -, 10))=10;greater(4, 10)=False", 
    "min(filter_less(all_rows, -, 10), us viewers (million))=11.34;diff(1, 11.34)=-10.34;less(3, -10.34);less(3, -10.34)=False", 
    "min(filter_less(all_rows, -, 10), us viewers (million))=11.34;diff(1, 11.34)=-10.34;eq(3, -10.34)=False", 
    "min(filter_less(all_rows, -, 10), us viewers (million))=11.34;diff(1, 11.34)=-10.34;greater(3, -10.34)=True", 
    "min(filter_less(all_rows, -, 10), us viewers (million))=11.34;diff(3, 11.34)=-8.34;less(1, -8.34);less(1, -8.34)=False", 
    "min(filter_less(all_rows, -, 10), us viewers (million))=11.34;diff(3, 11.34)=-8.34;eq(1, -8.34)=False", 
    "min(filter_less(all_rows, -, 10), us viewers (million))=11.34;diff(3, 11.34)=-8.34;greater(1, -8.34)=True", 
    "min(filter_less(all_rows, -, 10), us viewers (million))=11.34;add(1, 11.34)=12.34;less(3, 12.34);less(3, 12.34)=True", 
    "min(filter_less(all_rows, -, 10), us viewers (million))=11.34;add(1, 11.34)=12.34;eq(3, 12.34)=False", 
    "min(filter_less(all_rows, -, 10), us viewers (million))=11.34;add(1, 11.34)=12.34;greater(3, 12.34)=False", 
    "min(filter_less(all_rows, -, 10), us viewers (million))=11.34;add(3, 11.34)=14.34;less(1, 14.34);less(1, 14.34)=True", 
    "min(filter_less(all_rows, -, 10), us viewers (million))=11.34;add(3, 11.34)=14.34;eq(1, 14.34)=False", 
    "min(filter_less(all_rows, -, 10), us viewers (million))=11.34;add(3, 11.34)=14.34;greater(1, 14.34)=False", 
    "min(filter_less(all_rows, -, 10), -)=1;diff(1, 1)=0;less(3, 0);less(3, 0)=False", 
    "min(filter_less(all_rows, -, 10), -)=1;diff(1, 1)=0;eq(3, 0)=False", 
    "min(filter_less(all_rows, -, 10), -)=1;diff(1, 1)=0;greater(3, 0)=True", 
    "min(filter_less(all_rows, -, 10), -)=1;diff(3, 1)=2;less(1, 2);less(1, 2)=True", 
    "min(filter_less(all_rows, -, 10), -)=1;diff(3, 1)=2;eq(1, 2)=False", 
    "min(filter_less(all_rows, -, 10), -)=1;diff(3, 1)=2;greater(1, 2)=False", 
    "min(filter_less(all_rows, -, 10), -)=1;add(1, 1)=2;less(3, 2);less(3, 2)=False", 
    "min(filter_less(all_rows, -, 10), -)=1;add(1, 1)=2;eq(3, 2)=False", 
    "min(filter_less(all_rows, -, 10), -)=1;add(1, 1)=2;greater(3, 2)=True", 
    "min(filter_less(all_rows, -, 10), -)=1;add(3, 1)=4;less(1, 4);less(1, 4)=True", 
    "min(filter_less(all_rows, -, 10), -)=1;add(3, 1)=4;eq(1, 4)=False", 
    "min(filter_less(all_rows, -, 10), -)=1;add(3, 1)=4;greater(1, 4)=False", 
    "sum(filter_less(all_rows, -, 10), us viewers (million))=110.01;diff(1, 110.01)=-109.01;less(3, -109.01);less(3, -109.01)=False", 
    "sum(filter_less(all_rows, -, 10), us viewers (million))=110.01;diff(1, 110.01)=-109.01;eq(3, -109.01)=False", 
    "sum(filter_less(all_rows, -, 10), us viewers (million))=110.01;diff(1, 110.01)=-109.01;greater(3, -109.01)=True", 
    "sum(filter_less(all_rows, -, 10), us viewers (million))=110.01;diff(3, 110.01)=-107.01;less(1, -107.01);less(1, -107.01)=False", 
    "sum(filter_less(all_rows, -, 10), us viewers (million))=110.01;diff(3, 110.01)=-107.01;eq(1, -107.01)=False", 
    "sum(filter_less(all_rows, -, 10), us viewers (million))=110.01;diff(3, 110.01)=-107.01;greater(1, -107.01)=True", 
    "sum(filter_less(all_rows, -, 10), us viewers (million))=110.01;add(1, 110.01)=111.01;less(3, 111.01);less(3, 111.01)=True", 
    "sum(filter_less(all_rows, -, 10), us viewers (million))=110.01;add(1, 110.01)=111.01;eq(3, 111.01)=False", 
    "sum(filter_less(all_rows, -, 10), us viewers (million))=110.01;add(1, 110.01)=111.01;greater(3, 111.01)=False", 
    "sum(filter_less(all_rows, -, 10), us viewers (million))=110.01;add(3, 110.01)=113.01;less(1, 113.01);less(1, 113.01)=True", 
    "sum(filter_less(all_rows, -, 10), us viewers (million))=110.01;add(3, 110.01)=113.01;eq(1, 113.01)=False", 
    "sum(filter_less(all_rows, -, 10), us viewers (million))=110.01;add(3, 110.01)=113.01;greater(1, 113.01)=False", 
    "sum(filter_less(all_rows, -, 10), -)=45;diff(1, 45)=-44;less(3, -44);less(3, -44)=False", 
    "sum(filter_less(all_rows, -, 10), -)=45;diff(1, 45)=-44;eq(3, -44)=False", 
    "sum(filter_less(all_rows, -, 10), -)=45;diff(1, 45)=-44;greater(3, -44)=True", 
    "sum(filter_less(all_rows, -, 10), -)=45;diff(3, 45)=-42;less(1, -42);less(1, -42)=False", 
    "sum(filter_less(all_rows, -, 10), -)=45;diff(3, 45)=-42;eq(1, -42)=False", 
    "sum(filter_less(all_rows, -, 10), -)=45;diff(3, 45)=-42;greater(1, -42)=True", 
    "sum(filter_less(all_rows, -, 10), -)=45;add(1, 45)=46;less(3, 46);less(3, 46)=True", 
    "sum(filter_less(all_rows, -, 10), -)=45;add(1, 45)=46;eq(3, 46)=False", 
    "sum(filter_less(all_rows, -, 10), -)=45;add(1, 45)=46;greater(3, 46)=False", 
    "sum(filter_less(all_rows, -, 10), -)=45;add(3, 45)=48;less(1, 48);less(1, 48)=True", 
    "sum(filter_less(all_rows, -, 10), -)=45;add(3, 45)=48;eq(1, 48)=False", 
    "sum(filter_less(all_rows, -, 10), -)=45;add(3, 45)=48;greater(1, 48)=False", 
    "max(filter_less(all_rows, -, 10), us viewers (million))=13.22;diff(1, 13.22)=-12.22;less(3, -12.22);less(3, -12.22)=False", 
    "max(filter_less(all_rows, -, 10), us viewers (million))=13.22;diff(1, 13.22)=-12.22;eq(3, -12.22)=False", 
    "max(filter_less(all_rows, -, 10), us viewers (million))=13.22;diff(1, 13.22)=-12.22;greater(3, -12.22)=True", 
    "max(filter_less(all_rows, -, 10), us viewers (million))=13.22;diff(3, 13.22)=-10.22;less(1, -10.22);less(1, -10.22)=False", 
    "max(filter_less(all_rows, -, 10), us viewers (million))=13.22;diff(3, 13.22)=-10.22;eq(1, -10.22)=False", 
    "max(filter_less(all_rows, -, 10), us viewers (million))=13.22;diff(3, 13.22)=-10.22;greater(1, -10.22)=True", 
    "max(filter_less(all_rows, -, 10), us viewers (million))=13.22;add(1, 13.22)=14.22;less(3, 14.22);less(3, 14.22)=True", 
    "max(filter_less(all_rows, -, 10), us viewers (million))=13.22;add(1, 13.22)=14.22;eq(3, 14.22)=False", 
    "max(filter_less(all_rows, -, 10), us viewers (million))=13.22;add(1, 13.22)=14.22;greater(3, 14.22)=False", 
    "max(filter_less(all_rows, -, 10), us viewers (million))=13.22;add(3, 13.22)=16.22;less(1, 16.22);less(1, 16.22)=True", 
    "max(filter_less(all_rows, -, 10), us viewers (million))=13.22;add(3, 13.22)=16.22;eq(1, 16.22)=False", 
    "max(filter_less(all_rows, -, 10), us viewers (million))=13.22;add(3, 13.22)=16.22;greater(1, 16.22)=False", 
    "max(filter_less(all_rows, -, 10), -)=9;diff(1, 9)=-8;less(3, -8);less(3, -8)=False", 
    "max(filter_less(all_rows, -, 10), -)=9;diff(1, 9)=-8;eq(3, -8)=False", 
    "max(filter_less(all_rows, -, 10), -)=9;diff(1, 9)=-8;greater(3, -8)=True", 
    "max(filter_less(all_rows, -, 10), -)=9;diff(3, 9)=-6;less(1, -6);less(1, -6)=False", 
    "max(filter_less(all_rows, -, 10), -)=9;diff(3, 9)=-6;eq(1, -6)=False", 
    "max(filter_less(all_rows, -, 10), -)=9;diff(3, 9)=-6;greater(1, -6)=True", 
    "max(filter_less(all_rows, -, 10), -)=9;add(1, 9)=10;less(3, 10);less(3, 10)=True", 
    "max(filter_less(all_rows, -, 10), -)=9;add(1, 9)=10;eq(3, 10)=False", 
    "max(filter_less(all_rows, -, 10), -)=9;add(1, 9)=10;greater(3, 10)=False", 
    "max(filter_less(all_rows, -, 10), -)=9;add(3, 9)=12;less(1, 12);less(1, 12)=True", 
    "max(filter_less(all_rows, -, 10), -)=9;add(3, 9)=12;eq(1, 12)=False", 
    "max(filter_less(all_rows, -, 10), -)=9;add(3, 9)=12;greater(1, 12)=False", 
    "count(filter_less(all_rows, -, 10))=9;diff(1, 9)=-8;less(3, -8);less(3, -8)=False", 
    "count(filter_less(all_rows, -, 10))=9;diff(1, 9)=-8;eq(3, -8)=False", 
    "count(filter_less(all_rows, -, 10))=9;diff(1, 9)=-8;greater(3, -8)=True", 
    "count(filter_less(all_rows, -, 10))=9;diff(3, 9)=-6;less(1, -6);less(1, -6)=False", 
    "count(filter_less(all_rows, -, 10))=9;diff(3, 9)=-6;eq(1, -6)=False", 
    "count(filter_less(all_rows, -, 10))=9;diff(3, 9)=-6;greater(1, -6)=True", 
    "count(filter_less(all_rows, -, 10))=9;add(1, 9)=10;less(3, 10);less(3, 10)=True", 
    "count(filter_less(all_rows, -, 10))=9;add(1, 9)=10;eq(3, 10)=False", 
    "count(filter_less(all_rows, -, 10))=9;add(1, 9)=10;greater(3, 10)=False", 
    "count(filter_less(all_rows, -, 10))=9;add(3, 9)=12;less(1, 12);less(1, 12)=True", 
    "count(filter_less(all_rows, -, 10))=9;add(3, 9)=12;eq(1, 12)=False", 
    "count(filter_less(all_rows, -, 10))=9;add(3, 9)=12;greater(1, 12)=False", 
    "max(all_rows, -)=22;less(10, 22);and(greater(1, 3), less(10, 22))=False", 
    "max(all_rows, -)=22;and(greater(1, 3), eq(10, 22))=False", 
    "max(all_rows, -)=22;and(greater(1, 3), greater(10, 22))=False", 
    "and(greater(1, 3), all_greater_eq(argmin(all_rows, us viewers (million)), -, 10))=False", 
    "and(greater(1, 3), all_eq(argmin(all_rows, us viewers (million)), -, 10))=False", 
    "and(greater(1, 3), all_less(argmin(all_rows, us viewers (million)), -, 10))=False", 
    "and(greater(1, 3), all_greater(argmin(all_rows, us viewers (million)), -, 10))=False", 
    "and(greater(1, 3), all_less_eq(argmin(all_rows, us viewers (million)), -, 10))=False", 
    "and(greater(1, 3), all_greater_eq(argmin(all_rows, -), -, 10))=False", 
    "and(greater(1, 3), all_eq(argmin(all_rows, -), -, 10))=False", 
    "and(greater(1, 3), all_less(argmin(all_rows, -), -, 10))=False", 
    "and(greater(1, 3), all_greater(argmin(all_rows, -), -, 10))=False", 
    "and(greater(1, 3), all_less_eq(argmin(all_rows, -), -, 10))=False", 
    "max(all_rows, us viewers (million))=13.7;diff(1, 13.7)=-12.7;diff(10, -12.7)=22.7;less(3, 22.7);less(3, 22.7)=True", 
    "max(all_rows, us viewers (million))=13.7;diff(1, 13.7)=-12.7;diff(10, -12.7)=22.7;eq(3, 22.7)=False", 
    "max(all_rows, us viewers (million))=13.7;diff(1, 13.7)=-12.7;diff(10, -12.7)=22.7;greater(3, 22.7)=False", 
    "max(all_rows, us viewers (million))=13.7;diff(1, 13.7)=-12.7;diff(3, -12.7)=15.7;less(10, 15.7);less(10, 15.7)=True", 
    "max(all_rows, us viewers (million))=13.7;diff(1, 13.7)=-12.7;diff(3, -12.7)=15.7;eq(10, 15.7)=False", 
    "max(all_rows, us viewers (million))=13.7;diff(1, 13.7)=-12.7;diff(3, -12.7)=15.7;greater(10, 15.7)=False", 
    "max(all_rows, us viewers (million))=13.7;diff(1, 13.7)=-12.7;add(10, -12.7)=-2.7;less(3, -2.7);less(3, -2.7)=False", 
    "max(all_rows, us viewers (million))=13.7;diff(1, 13.7)=-12.7;add(10, -12.7)=-2.7;eq(3, -2.7)=False", 
    "max(all_rows, us viewers (million))=13.7;diff(1, 13.7)=-12.7;add(10, -12.7)=-2.7;greater(3, -2.7)=True", 
    "max(all_rows, us viewers (million))=13.7;diff(1, 13.7)=-12.7;add(3, -12.7)=-9.7;less(10, -9.7);less(10, -9.7)=False", 
    "max(all_rows, us viewers (million))=13.7;diff(1, 13.7)=-12.7;add(3, -12.7)=-9.7;eq(10, -9.7)=False", 
    "max(all_rows, us viewers (million))=13.7;diff(1, 13.7)=-12.7;add(3, -12.7)=-9.7;greater(10, -9.7)=True", 
    "max(all_rows, us viewers (million))=13.7;diff(3, 13.7)=-10.7;diff(10, -10.7)=20.7;less(1, 20.7);less(1, 20.7)=True", 
    "max(all_rows, us viewers (million))=13.7;diff(3, 13.7)=-10.7;diff(10, -10.7)=20.7;eq(1, 20.7)=False", 
    "max(all_rows, us viewers (million))=13.7;diff(3, 13.7)=-10.7;diff(10, -10.7)=20.7;greater(1, 20.7)=False", 
    "max(all_rows, us viewers (million))=13.7;diff(3, 13.7)=-10.7;diff(1, -10.7)=11.7;less(10, 11.7);less(10, 11.7)=True", 
    "max(all_rows, us viewers (million))=13.7;diff(3, 13.7)=-10.7;diff(1, -10.7)=11.7;eq(10, 11.7)=False", 
    "max(all_rows, us viewers (million))=13.7;diff(3, 13.7)=-10.7;diff(1, -10.7)=11.7;greater(10, 11.7)=False", 
    "max(all_rows, us viewers (million))=13.7;diff(3, 13.7)=-10.7;add(10, -10.7)=-0.7;less(1, -0.7);less(1, -0.7)=False", 
    "max(all_rows, us viewers (million))=13.7;diff(3, 13.7)=-10.7;add(10, -10.7)=-0.7;eq(1, -0.7)=False", 
    "max(all_rows, us viewers (million))=13.7;diff(3, 13.7)=-10.7;add(10, -10.7)=-0.7;greater(1, -0.7)=True", 
    "max(all_rows, us viewers (million))=13.7;diff(3, 13.7)=-10.7;add(1, -10.7)=-9.7;less(10, -9.7);less(10, -9.7)=False", 
    "max(all_rows, us viewers (million))=13.7;diff(3, 13.7)=-10.7;add(1, -10.7)=-9.7;eq(10, -9.7)=False", 
    "max(all_rows, us viewers (million))=13.7;diff(3, 13.7)=-10.7;add(1, -10.7)=-9.7;greater(10, -9.7)=True", 
    "max(all_rows, us viewers (million))=13.7;add(1, 13.7)=14.7;diff(10, 14.7)=-4.7;less(3, -4.7);less(3, -4.7)=False", 
    "max(all_rows, us viewers (million))=13.7;add(1, 13.7)=14.7;diff(10, 14.7)=-4.7;eq(3, -4.7)=False", 
    "max(all_rows, us viewers (million))=13.7;add(1, 13.7)=14.7;diff(10, 14.7)=-4.7;greater(3, -4.7)=True", 
    "max(all_rows, us viewers (million))=13.7;add(1, 13.7)=14.7;diff(3, 14.7)=-11.7;less(10, -11.7);less(10, -11.7)=False", 
    "max(all_rows, us viewers (million))=13.7;add(1, 13.7)=14.7;diff(3, 14.7)=-11.7;eq(10, -11.7)=False", 
    "max(all_rows, us viewers (million))=13.7;add(1, 13.7)=14.7;diff(3, 14.7)=-11.7;greater(10, -11.7)=True", 
    "max(all_rows, us viewers (million))=13.7;add(1, 13.7)=14.7;add(10, 14.7)=24.7;less(3, 24.7);less(3, 24.7)=True", 
    "max(all_rows, us viewers (million))=13.7;add(1, 13.7)=14.7;add(10, 14.7)=24.7;eq(3, 24.7)=False", 
    "max(all_rows, us viewers (million))=13.7;add(1, 13.7)=14.7;add(10, 14.7)=24.7;greater(3, 24.7)=False", 
    "max(all_rows, us viewers (million))=13.7;add(1, 13.7)=14.7;add(3, 14.7)=17.7;less(10, 17.7);less(10, 17.7)=True", 
    "max(all_rows, us viewers (million))=13.7;add(1, 13.7)=14.7;add(3, 14.7)=17.7;eq(10, 17.7)=False", 
    "max(all_rows, us viewers (million))=13.7;add(1, 13.7)=14.7;add(3, 14.7)=17.7;greater(10, 17.7)=False", 
    "max(all_rows, us viewers (million))=13.7;add(3, 13.7)=16.7;diff(10, 16.7)=-6.7;less(1, -6.7);less(1, -6.7)=False", 
    "max(all_rows, us viewers (million))=13.7;add(3, 13.7)=16.7;diff(10, 16.7)=-6.7;eq(1, -6.7)=False", 
    "max(all_rows, us viewers (million))=13.7;add(3, 13.7)=16.7;diff(10, 16.7)=-6.7;greater(1, -6.7)=True", 
    "max(all_rows, us viewers (million))=13.7;add(3, 13.7)=16.7;diff(1, 16.7)=-15.7;less(10, -15.7);less(10, -15.7)=False", 
    "max(all_rows, us viewers (million))=13.7;add(3, 13.7)=16.7;diff(1, 16.7)=-15.7;eq(10, -15.7)=False", 
    "max(all_rows, us viewers (million))=13.7;add(3, 13.7)=16.7;diff(1, 16.7)=-15.7;greater(10, -15.7)=True", 
    "max(all_rows, us viewers (million))=13.7;add(3, 13.7)=16.7;add(10, 16.7)=26.7;less(1, 26.7);less(1, 26.7)=True", 
    "max(all_rows, us viewers (million))=13.7;add(3, 13.7)=16.7;add(10, 16.7)=26.7;eq(1, 26.7)=False", 
    "max(all_rows, us viewers (million))=13.7;add(3, 13.7)=16.7;add(10, 16.7)=26.7;greater(1, 26.7)=False", 
    "max(all_rows, us viewers (million))=13.7;add(3, 13.7)=16.7;add(1, 16.7)=17.7;less(10, 17.7);less(10, 17.7)=True", 
    "max(all_rows, us viewers (million))=13.7;add(3, 13.7)=16.7;add(1, 16.7)=17.7;eq(10, 17.7)=False", 
    "max(all_rows, us viewers (million))=13.7;add(3, 13.7)=16.7;add(1, 16.7)=17.7;greater(10, 17.7)=False", 
    "max(all_rows, -)=22;diff(10, 22)=-12;diff(1, -12)=13;less(3, 13);less(3, 13)=True", 
    "max(all_rows, -)=22;diff(10, 22)=-12;diff(1, -12)=13;eq(3, 13)=False", 
    "max(all_rows, -)=22;diff(10, 22)=-12;diff(1, -12)=13;greater(3, 13)=False", 
    "max(all_rows, -)=22;diff(10, 22)=-12;diff(3, -12)=15;less(1, 15);less(1, 15)=True", 
    "max(all_rows, -)=22;diff(10, 22)=-12;diff(3, -12)=15;eq(1, 15)=False", 
    "max(all_rows, -)=22;diff(10, 22)=-12;diff(3, -12)=15;greater(1, 15)=False", 
    "max(all_rows, -)=22;diff(10, 22)=-12;add(1, -12)=-11;less(3, -11);less(3, -11)=False", 
    "max(all_rows, -)=22;diff(10, 22)=-12;add(1, -12)=-11;eq(3, -11)=False", 
    "max(all_rows, -)=22;diff(10, 22)=-12;add(1, -12)=-11;greater(3, -11)=True", 
    "max(all_rows, -)=22;diff(10, 22)=-12;add(3, -12)=-9;less(1, -9);less(1, -9)=False", 
    "max(all_rows, -)=22;diff(10, 22)=-12;add(3, -12)=-9;eq(1, -9)=False", 
    "max(all_rows, -)=22;diff(10, 22)=-12;add(3, -12)=-9;greater(1, -9)=True", 
    "max(all_rows, -)=22;diff(1, 22)=-21;diff(10, -21)=31;less(3, 31);less(3, 31)=True", 
    "max(all_rows, -)=22;diff(1, 22)=-21;diff(10, -21)=31;eq(3, 31)=False", 
    "max(all_rows, -)=22;diff(1, 22)=-21;diff(10, -21)=31;greater(3, 31)=False", 
    "max(all_rows, -)=22;diff(1, 22)=-21;diff(3, -21)=24;less(10, 24);less(10, 24)=True", 
    "max(all_rows, -)=22;diff(1, 22)=-21;diff(3, -21)=24;eq(10, 24)=False", 
    "max(all_rows, -)=22;diff(1, 22)=-21;diff(3, -21)=24;greater(10, 24)=False", 
    "max(all_rows, -)=22;diff(1, 22)=-21;add(10, -21)=-11;less(3, -11);less(3, -11)=False", 
    "max(all_rows, -)=22;diff(1, 22)=-21;add(10, -21)=-11;eq(3, -11)=False", 
    "max(all_rows, -)=22;diff(1, 22)=-21;add(10, -21)=-11;greater(3, -11)=True", 
    "max(all_rows, -)=22;diff(1, 22)=-21;add(3, -21)=-18;less(10, -18);less(10, -18)=False", 
    "max(all_rows, -)=22;diff(1, 22)=-21;add(3, -21)=-18;eq(10, -18)=False", 
    "max(all_rows, -)=22;diff(1, 22)=-21;add(3, -21)=-18;greater(10, -18)=True", 
    "max(all_rows, -)=22;diff(3, 22)=-19;diff(10, -19)=29;less(1, 29);less(1, 29)=True", 
    "max(all_rows, -)=22;diff(3, 22)=-19;diff(10, -19)=29;eq(1, 29)=False", 
    "max(all_rows, -)=22;diff(3, 22)=-19;diff(10, -19)=29;greater(1, 29)=False", 
    "max(all_rows, -)=22;diff(3, 22)=-19;diff(1, -19)=20;less(10, 20);less(10, 20)=True", 
    "max(all_rows, -)=22;diff(3, 22)=-19;diff(1, -19)=20;eq(10, 20)=False", 
    "max(all_rows, -)=22;diff(3, 22)=-19;diff(1, -19)=20;greater(10, 20)=False", 
    "max(all_rows, -)=22;diff(3, 22)=-19;add(10, -19)=-9;less(1, -9);less(1, -9)=False", 
    "max(all_rows, -)=22;diff(3, 22)=-19;add(10, -19)=-9;eq(1, -9)=False", 
    "max(all_rows, -)=22;diff(3, 22)=-19;add(10, -19)=-9;greater(1, -9)=True", 
    "max(all_rows, -)=22;diff(3, 22)=-19;add(1, -19)=-18;less(10, -18);less(10, -18)=False", 
    "max(all_rows, -)=22;diff(3, 22)=-19;add(1, -19)=-18;eq(10, -18)=False", 
    "max(all_rows, -)=22;diff(3, 22)=-19;add(1, -19)=-18;greater(10, -18)=True", 
    "max(all_rows, -)=22;add(10, 22)=32;diff(1, 32)=-31;less(3, -31);less(3, -31)=False", 
    "max(all_rows, -)=22;add(10, 22)=32;diff(1, 32)=-31;eq(3, -31)=False", 
    "max(all_rows, -)=22;add(10, 22)=32;diff(1, 32)=-31;greater(3, -31)=True", 
    "max(all_rows, -)=22;add(10, 22)=32;diff(3, 32)=-29;less(1, -29);less(1, -29)=False", 
    "max(all_rows, -)=22;add(10, 22)=32;diff(3, 32)=-29;eq(1, -29)=False", 
    "max(all_rows, -)=22;add(10, 22)=32;diff(3, 32)=-29;greater(1, -29)=True", 
    "max(all_rows, -)=22;add(10, 22)=32;add(1, 32)=33;less(3, 33);less(3, 33)=True", 
    "max(all_rows, -)=22;add(10, 22)=32;add(1, 32)=33;eq(3, 33)=False", 
    "max(all_rows, -)=22;add(10, 22)=32;add(1, 32)=33;greater(3, 33)=False", 
    "max(all_rows, -)=22;add(10, 22)=32;add(3, 32)=35;less(1, 35);less(1, 35)=True", 
    "max(all_rows, -)=22;add(10, 22)=32;add(3, 32)=35;eq(1, 35)=False", 
    "max(all_rows, -)=22;add(10, 22)=32;add(3, 32)=35;greater(1, 35)=False", 
    "max(all_rows, -)=22;add(1, 22)=23;diff(10, 23)=-13;less(3, -13);less(3, -13)=False", 
    "max(all_rows, -)=22;add(1, 22)=23;diff(10, 23)=-13;eq(3, -13)=False", 
    "max(all_rows, -)=22;add(1, 22)=23;diff(10, 23)=-13;greater(3, -13)=True", 
    "max(all_rows, -)=22;add(1, 22)=23;diff(3, 23)=-20;less(10, -20);less(10, -20)=False", 
    "max(all_rows, -)=22;add(1, 22)=23;diff(3, 23)=-20;eq(10, -20)=False", 
    "max(all_rows, -)=22;add(1, 22)=23;diff(3, 23)=-20;greater(10, -20)=True", 
    "max(all_rows, -)=22;add(1, 22)=23;add(10, 23)=33;less(3, 33);less(3, 33)=True", 
    "max(all_rows, -)=22;add(1, 22)=23;add(10, 23)=33;eq(3, 33)=False", 
    "max(all_rows, -)=22;add(1, 22)=23;add(10, 23)=33;greater(3, 33)=False", 
    "max(all_rows, -)=22;add(1, 22)=23;add(3, 23)=26;less(10, 26);less(10, 26)=True", 
    "max(all_rows, -)=22;add(1, 22)=23;add(3, 23)=26;eq(10, 26)=False", 
    "max(all_rows, -)=22;add(1, 22)=23;add(3, 23)=26;greater(10, 26)=False", 
    "max(all_rows, -)=22;add(3, 22)=25;diff(10, 25)=-15;less(1, -15);less(1, -15)=False", 
    "max(all_rows, -)=22;add(3, 22)=25;diff(10, 25)=-15;eq(1, -15)=False", 
    "max(all_rows, -)=22;add(3, 22)=25;diff(10, 25)=-15;greater(1, -15)=True", 
    "max(all_rows, -)=22;add(3, 22)=25;diff(1, 25)=-24;less(10, -24);less(10, -24)=False", 
    "max(all_rows, -)=22;add(3, 22)=25;diff(1, 25)=-24;eq(10, -24)=False", 
    "max(all_rows, -)=22;add(3, 22)=25;diff(1, 25)=-24;greater(10, -24)=True", 
    "max(all_rows, -)=22;add(3, 22)=25;add(10, 25)=35;less(1, 35);less(1, 35)=True", 
    "max(all_rows, -)=22;add(3, 22)=25;add(10, 25)=35;eq(1, 35)=False", 
    "max(all_rows, -)=22;add(3, 22)=25;add(10, 25)=35;greater(1, 35)=False", 
    "max(all_rows, -)=22;add(3, 22)=25;add(1, 25)=26;less(10, 26);less(10, 26)=True", 
    "max(all_rows, -)=22;add(3, 22)=25;add(1, 25)=26;eq(10, 26)=False", 
    "max(all_rows, -)=22;add(3, 22)=25;add(1, 25)=26;greater(10, 26)=False", 
    "count(filter_eq(all_rows, -, 10))=1;diff(1, 1)=0;less(3, 0);less(3, 0)=False", 
    "count(filter_eq(all_rows, -, 10))=1;diff(1, 1)=0;eq(3, 0)=False", 
    "count(filter_eq(all_rows, -, 10))=1;diff(1, 1)=0;greater(3, 0)=True", 
    "count(filter_eq(all_rows, -, 10))=1;diff(3, 1)=2;less(1, 2);less(1, 2)=True", 
    "count(filter_eq(all_rows, -, 10))=1;diff(3, 1)=2;eq(1, 2)=False", 
    "count(filter_eq(all_rows, -, 10))=1;diff(3, 1)=2;greater(1, 2)=False", 
    "count(filter_eq(all_rows, -, 10))=1;add(1, 1)=2;less(3, 2);less(3, 2)=False", 
    "count(filter_eq(all_rows, -, 10))=1;add(1, 1)=2;eq(3, 2)=False", 
    "count(filter_eq(all_rows, -, 10))=1;add(1, 1)=2;greater(3, 2)=True", 
    "count(filter_eq(all_rows, -, 10))=1;add(3, 1)=4;less(1, 4);less(1, 4)=True", 
    "count(filter_eq(all_rows, -, 10))=1;add(3, 1)=4;eq(1, 4)=False", 
    "count(filter_eq(all_rows, -, 10))=1;add(3, 1)=4;greater(1, 4)=False", 
    "hop(filter_eq(all_rows, -, 10), us viewers (million))=12.56;diff(1, 12.56)=-11.56;less(3, -11.56);less(3, -11.56)=False", 
    "hop(filter_eq(all_rows, -, 10), us viewers (million))=12.56;diff(1, 12.56)=-11.56;eq(3, -11.56)=False", 
    "hop(filter_eq(all_rows, -, 10), us viewers (million))=12.56;diff(1, 12.56)=-11.56;greater(3, -11.56)=True", 
    "hop(filter_eq(all_rows, -, 10), us viewers (million))=12.56;diff(3, 12.56)=-9.56;less(1, -9.56);less(1, -9.56)=False", 
    "hop(filter_eq(all_rows, -, 10), us viewers (million))=12.56;diff(3, 12.56)=-9.56;eq(1, -9.56)=False", 
    "hop(filter_eq(all_rows, -, 10), us viewers (million))=12.56;diff(3, 12.56)=-9.56;greater(1, -9.56)=True", 
    "hop(filter_eq(all_rows, -, 10), us viewers (million))=12.56;add(1, 12.56)=13.56;less(3, 13.56);less(3, 13.56)=True", 
    "hop(filter_eq(all_rows, -, 10), us viewers (million))=12.56;add(1, 12.56)=13.56;eq(3, 13.56)=False", 
    "hop(filter_eq(all_rows, -, 10), us viewers (million))=12.56;add(1, 12.56)=13.56;greater(3, 13.56)=False", 
    "hop(filter_eq(all_rows, -, 10), us viewers (million))=12.56;add(3, 12.56)=15.56;less(1, 15.56);less(1, 15.56)=True", 
    "hop(filter_eq(all_rows, -, 10), us viewers (million))=12.56;add(3, 12.56)=15.56;eq(1, 15.56)=False", 
    "hop(filter_eq(all_rows, -, 10), us viewers (million))=12.56;add(3, 12.56)=15.56;greater(1, 15.56)=False", 
    "hop(filter_eq(all_rows, -, 10), -)=10;diff(1, 10)=-9;less(3, -9);less(3, -9)=False", 
    "hop(filter_eq(all_rows, -, 10), -)=10;diff(1, 10)=-9;eq(3, -9)=False", 
    "hop(filter_eq(all_rows, -, 10), -)=10;diff(1, 10)=-9;greater(3, -9)=True", 
    "hop(filter_eq(all_rows, -, 10), -)=10;diff(3, 10)=-7;less(1, -7);less(1, -7)=False", 
    "hop(filter_eq(all_rows, -, 10), -)=10;diff(3, 10)=-7;eq(1, -7)=False", 
    "hop(filter_eq(all_rows, -, 10), -)=10;diff(3, 10)=-7;greater(1, -7)=True", 
    "hop(filter_eq(all_rows, -, 10), -)=10;add(1, 10)=11;less(3, 11);less(3, 11)=True", 
    "hop(filter_eq(all_rows, -, 10), -)=10;add(1, 10)=11;eq(3, 11)=False", 
    "hop(filter_eq(all_rows, -, 10), -)=10;add(1, 10)=11;greater(3, 11)=False", 
    "hop(filter_eq(all_rows, -, 10), -)=10;add(3, 10)=13;less(1, 13);less(1, 13)=True", 
    "hop(filter_eq(all_rows, -, 10), -)=10;add(3, 10)=13;eq(1, 13)=False", 
    "hop(filter_eq(all_rows, -, 10), -)=10;add(3, 10)=13;greater(1, 13)=False", 
    "count(all_rows)=22;diff(1, 22)=-21;diff(10, -21)=31;less(3, 31);less(3, 31)=True", 
    "count(all_rows)=22;diff(1, 22)=-21;diff(10, -21)=31;eq(3, 31)=False", 
    "count(all_rows)=22;diff(1, 22)=-21;diff(10, -21)=31;greater(3, 31)=False", 
    "count(all_rows)=22;diff(1, 22)=-21;diff(3, -21)=24;less(10, 24);less(10, 24)=True", 
    "count(all_rows)=22;diff(1, 22)=-21;diff(3, -21)=24;eq(10, 24)=False", 
    "count(all_rows)=22;diff(1, 22)=-21;diff(3, -21)=24;greater(10, 24)=False", 
    "count(all_rows)=22;diff(1, 22)=-21;add(10, -21)=-11;less(3, -11);less(3, -11)=False", 
    "count(all_rows)=22;diff(1, 22)=-21;add(10, -21)=-11;eq(3, -11)=False", 
    "count(all_rows)=22;diff(1, 22)=-21;add(10, -21)=-11;greater(3, -11)=True", 
    "count(all_rows)=22;diff(1, 22)=-21;add(3, -21)=-18;less(10, -18);less(10, -18)=False", 
    "count(all_rows)=22;diff(1, 22)=-21;add(3, -21)=-18;eq(10, -18)=False", 
    "count(all_rows)=22;diff(1, 22)=-21;add(3, -21)=-18;greater(10, -18)=True", 
    "count(all_rows)=22;diff(3, 22)=-19;diff(10, -19)=29;less(1, 29);less(1, 29)=True", 
    "count(all_rows)=22;diff(3, 22)=-19;diff(10, -19)=29;eq(1, 29)=False", 
    "count(all_rows)=22;diff(3, 22)=-19;diff(10, -19)=29;greater(1, 29)=False", 
    "count(all_rows)=22;diff(3, 22)=-19;diff(1, -19)=20;less(10, 20);less(10, 20)=True", 
    "count(all_rows)=22;diff(3, 22)=-19;diff(1, -19)=20;eq(10, 20)=False", 
    "count(all_rows)=22;diff(3, 22)=-19;diff(1, -19)=20;greater(10, 20)=False", 
    "count(all_rows)=22;diff(3, 22)=-19;add(10, -19)=-9;less(1, -9);less(1, -9)=False", 
    "count(all_rows)=22;diff(3, 22)=-19;add(10, -19)=-9;eq(1, -9)=False", 
    "count(all_rows)=22;diff(3, 22)=-19;add(10, -19)=-9;greater(1, -9)=True", 
    "count(all_rows)=22;diff(3, 22)=-19;add(1, -19)=-18;less(10, -18);less(10, -18)=False", 
    "count(all_rows)=22;diff(3, 22)=-19;add(1, -19)=-18;eq(10, -18)=False", 
    "count(all_rows)=22;diff(3, 22)=-19;add(1, -19)=-18;greater(10, -18)=True", 
    "count(all_rows)=22;add(1, 22)=23;diff(10, 23)=-13;less(3, -13);less(3, -13)=False", 
    "count(all_rows)=22;add(1, 22)=23;diff(10, 23)=-13;eq(3, -13)=False", 
    "count(all_rows)=22;add(1, 22)=23;diff(10, 23)=-13;greater(3, -13)=True", 
    "count(all_rows)=22;add(1, 22)=23;diff(3, 23)=-20;less(10, -20);less(10, -20)=False", 
    "count(all_rows)=22;add(1, 22)=23;diff(3, 23)=-20;eq(10, -20)=False", 
    "count(all_rows)=22;add(1, 22)=23;diff(3, 23)=-20;greater(10, -20)=True", 
    "count(all_rows)=22;add(1, 22)=23;add(10, 23)=33;less(3, 33);less(3, 33)=True", 
    "count(all_rows)=22;add(1, 22)=23;add(10, 23)=33;eq(3, 33)=False", 
    "count(all_rows)=22;add(1, 22)=23;add(10, 23)=33;greater(3, 33)=False", 
    "count(all_rows)=22;add(1, 22)=23;add(3, 23)=26;less(10, 26);less(10, 26)=True", 
    "count(all_rows)=22;add(1, 22)=23;add(3, 23)=26;eq(10, 26)=False", 
    "count(all_rows)=22;add(1, 22)=23;add(3, 23)=26;greater(10, 26)=False", 
    "count(all_rows)=22;add(3, 22)=25;diff(10, 25)=-15;less(1, -15);less(1, -15)=False", 
    "count(all_rows)=22;add(3, 22)=25;diff(10, 25)=-15;eq(1, -15)=False", 
    "count(all_rows)=22;add(3, 22)=25;diff(10, 25)=-15;greater(1, -15)=True", 
    "count(all_rows)=22;add(3, 22)=25;diff(1, 25)=-24;less(10, -24);less(10, -24)=False", 
    "count(all_rows)=22;add(3, 22)=25;diff(1, 25)=-24;eq(10, -24)=False", 
    "count(all_rows)=22;add(3, 22)=25;diff(1, 25)=-24;greater(10, -24)=True", 
    "count(all_rows)=22;add(3, 22)=25;add(10, 25)=35;less(1, 35);less(1, 35)=True", 
    "count(all_rows)=22;add(3, 22)=25;add(10, 25)=35;eq(1, 35)=False", 
    "count(all_rows)=22;add(3, 22)=25;add(10, 25)=35;greater(1, 35)=False", 
    "count(all_rows)=22;add(3, 22)=25;add(1, 25)=26;less(10, 26);less(10, 26)=True", 
    "count(all_rows)=22;add(3, 22)=25;add(1, 25)=26;eq(10, 26)=False", 
    "count(all_rows)=22;add(3, 22)=25;add(1, 25)=26;greater(10, 26)=False", 
    "min(filter_less_eq(all_rows, -, 10), us viewers (million))=11.34;diff(1, 11.34)=-10.34;less(3, -10.34);less(3, -10.34)=False", 
    "min(filter_less_eq(all_rows, -, 10), us viewers (million))=11.34;diff(1, 11.34)=-10.34;eq(3, -10.34)=False", 
    "min(filter_less_eq(all_rows, -, 10), us viewers (million))=11.34;diff(1, 11.34)=-10.34;greater(3, -10.34)=True", 
    "min(filter_less_eq(all_rows, -, 10), us viewers (million))=11.34;diff(3, 11.34)=-8.34;less(1, -8.34);less(1, -8.34)=False", 
    "min(filter_less_eq(all_rows, -, 10), us viewers (million))=11.34;diff(3, 11.34)=-8.34;eq(1, -8.34)=False", 
    "min(filter_less_eq(all_rows, -, 10), us viewers (million))=11.34;diff(3, 11.34)=-8.34;greater(1, -8.34)=True", 
    "min(filter_less_eq(all_rows, -, 10), us viewers (million))=11.34;add(1, 11.34)=12.34;less(3, 12.34);less(3, 12.34)=True", 
    "min(filter_less_eq(all_rows, -, 10), us viewers (million))=11.34;add(1, 11.34)=12.34;eq(3, 12.34)=False", 
    "min(filter_less_eq(all_rows, -, 10), us viewers (million))=11.34;add(1, 11.34)=12.34;greater(3, 12.34)=False", 
    "min(filter_less_eq(all_rows, -, 10), us viewers (million))=11.34;add(3, 11.34)=14.34;less(1, 14.34);less(1, 14.34)=True", 
    "min(filter_less_eq(all_rows, -, 10), us viewers (million))=11.34;add(3, 11.34)=14.34;eq(1, 14.34)=False", 
    "min(filter_less_eq(all_rows, -, 10), us viewers (million))=11.34;add(3, 11.34)=14.34;greater(1, 14.34)=False", 
    "min(filter_less_eq(all_rows, -, 10), -)=1;diff(1, 1)=0;less(3, 0);less(3, 0)=False", 
    "min(filter_less_eq(all_rows, -, 10), -)=1;diff(1, 1)=0;eq(3, 0)=False", 
    "min(filter_less_eq(all_rows, -, 10), -)=1;diff(1, 1)=0;greater(3, 0)=True", 
    "min(filter_less_eq(all_rows, -, 10), -)=1;diff(3, 1)=2;less(1, 2);less(1, 2)=True", 
    "min(filter_less_eq(all_rows, -, 10), -)=1;diff(3, 1)=2;eq(1, 2)=False", 
    "min(filter_less_eq(all_rows, -, 10), -)=1;diff(3, 1)=2;greater(1, 2)=False", 
    "min(filter_less_eq(all_rows, -, 10), -)=1;add(1, 1)=2;less(3, 2);less(3, 2)=False", 
    "min(filter_less_eq(all_rows, -, 10), -)=1;add(1, 1)=2;eq(3, 2)=False", 
    "min(filter_less_eq(all_rows, -, 10), -)=1;add(1, 1)=2;greater(3, 2)=True", 
    "min(filter_less_eq(all_rows, -, 10), -)=1;add(3, 1)=4;less(1, 4);less(1, 4)=True", 
    "min(filter_less_eq(all_rows, -, 10), -)=1;add(3, 1)=4;eq(1, 4)=False", 
    "min(filter_less_eq(all_rows, -, 10), -)=1;add(3, 1)=4;greater(1, 4)=False", 
    "sum(filter_less_eq(all_rows, -, 10), us viewers (million))=122.57;diff(1, 122.57)=-121.57;less(3, -121.57);less(3, -121.57)=False", 
    "sum(filter_less_eq(all_rows, -, 10), us viewers (million))=122.57;diff(1, 122.57)=-121.57;eq(3, -121.57)=False", 
    "sum(filter_less_eq(all_rows, -, 10), us viewers (million))=122.57;diff(1, 122.57)=-121.57;greater(3, -121.57)=True", 
    "sum(filter_less_eq(all_rows, -, 10), us viewers (million))=122.57;diff(3, 122.57)=-119.57;less(1, -119.57);less(1, -119.57)=False", 
    "sum(filter_less_eq(all_rows, -, 10), us viewers (million))=122.57;diff(3, 122.57)=-119.57;eq(1, -119.57)=False", 
    "sum(filter_less_eq(all_rows, -, 10), us viewers (million))=122.57;diff(3, 122.57)=-119.57;greater(1, -119.57)=True", 
    "sum(filter_less_eq(all_rows, -, 10), us viewers (million))=122.57;add(1, 122.57)=123.57;less(3, 123.57);less(3, 123.57)=True", 
    "sum(filter_less_eq(all_rows, -, 10), us viewers (million))=122.57;add(1, 122.57)=123.57;eq(3, 123.57)=False", 
    "sum(filter_less_eq(all_rows, -, 10), us viewers (million))=122.57;add(1, 122.57)=123.57;greater(3, 123.57)=False", 
    "sum(filter_less_eq(all_rows, -, 10), us viewers (million))=122.57;add(3, 122.57)=125.57;less(1, 125.57);less(1, 125.57)=True", 
    "sum(filter_less_eq(all_rows, -, 10), us viewers (million))=122.57;add(3, 122.57)=125.57;eq(1, 125.57)=False", 
    "sum(filter_less_eq(all_rows, -, 10), us viewers (million))=122.57;add(3, 122.57)=125.57;greater(1, 125.57)=False", 
    "sum(filter_less_eq(all_rows, -, 10), -)=55;diff(1, 55)=-54;less(3, -54);less(3, -54)=False", 
    "sum(filter_less_eq(all_rows, -, 10), -)=55;diff(1, 55)=-54;eq(3, -54)=False", 
    "sum(filter_less_eq(all_rows, -, 10), -)=55;diff(1, 55)=-54;greater(3, -54)=True", 
    "sum(filter_less_eq(all_rows, -, 10), -)=55;diff(3, 55)=-52;less(1, -52);less(1, -52)=False", 
    "sum(filter_less_eq(all_rows, -, 10), -)=55;diff(3, 55)=-52;eq(1, -52)=False", 
    "sum(filter_less_eq(all_rows, -, 10), -)=55;diff(3, 55)=-52;greater(1, -52)=True", 
    "sum(filter_less_eq(all_rows, -, 10), -)=55;add(1, 55)=56;less(3, 56);less(3, 56)=True", 
    "sum(filter_less_eq(all_rows, -, 10), -)=55;add(1, 55)=56;eq(3, 56)=False", 
    "sum(filter_less_eq(all_rows, -, 10), -)=55;add(1, 55)=56;greater(3, 56)=False", 
    "sum(filter_less_eq(all_rows, -, 10), -)=55;add(3, 55)=58;less(1, 58);less(1, 58)=True", 
    "sum(filter_less_eq(all_rows, -, 10), -)=55;add(3, 55)=58;eq(1, 58)=False", 
    "sum(filter_less_eq(all_rows, -, 10), -)=55;add(3, 55)=58;greater(1, 58)=False", 
    "max(filter_less_eq(all_rows, -, 10), us viewers (million))=13.22;diff(1, 13.22)=-12.22;less(3, -12.22);less(3, -12.22)=False", 
    "max(filter_less_eq(all_rows, -, 10), us viewers (million))=13.22;diff(1, 13.22)=-12.22;eq(3, -12.22)=False", 
    "max(filter_less_eq(all_rows, -, 10), us viewers (million))=13.22;diff(1, 13.22)=-12.22;greater(3, -12.22)=True", 
    "max(filter_less_eq(all_rows, -, 10), us viewers (million))=13.22;diff(3, 13.22)=-10.22;less(1, -10.22);less(1, -10.22)=False", 
    "max(filter_less_eq(all_rows, -, 10), us viewers (million))=13.22;diff(3, 13.22)=-10.22;eq(1, -10.22)=False", 
    "max(filter_less_eq(all_rows, -, 10), us viewers (million))=13.22;diff(3, 13.22)=-10.22;greater(1, -10.22)=True", 
    "max(filter_less_eq(all_rows, -, 10), us viewers (million))=13.22;add(1, 13.22)=14.22;less(3, 14.22);less(3, 14.22)=True", 
    "max(filter_less_eq(all_rows, -, 10), us viewers (million))=13.22;add(1, 13.22)=14.22;eq(3, 14.22)=False", 
    "max(filter_less_eq(all_rows, -, 10), us viewers (million))=13.22;add(1, 13.22)=14.22;greater(3, 14.22)=False", 
    "max(filter_less_eq(all_rows, -, 10), us viewers (million))=13.22;add(3, 13.22)=16.22;less(1, 16.22);less(1, 16.22)=True", 
    "max(filter_less_eq(all_rows, -, 10), us viewers (million))=13.22;add(3, 13.22)=16.22;eq(1, 16.22)=False", 
    "max(filter_less_eq(all_rows, -, 10), us viewers (million))=13.22;add(3, 13.22)=16.22;greater(1, 16.22)=False", 
    "max(filter_less_eq(all_rows, -, 10), -)=10;diff(1, 10)=-9;less(3, -9);less(3, -9)=False", 
    "max(filter_less_eq(all_rows, -, 10), -)=10;diff(1, 10)=-9;eq(3, -9)=False", 
    "max(filter_less_eq(all_rows, -, 10), -)=10;diff(1, 10)=-9;greater(3, -9)=True", 
    "max(filter_less_eq(all_rows, -, 10), -)=10;diff(3, 10)=-7;less(1, -7);less(1, -7)=False", 
    "max(filter_less_eq(all_rows, -, 10), -)=10;diff(3, 10)=-7;eq(1, -7)=False", 
    "max(filter_less_eq(all_rows, -, 10), -)=10;diff(3, 10)=-7;greater(1, -7)=True", 
    "max(filter_less_eq(all_rows, -, 10), -)=10;add(1, 10)=11;less(3, 11);less(3, 11)=True", 
    "max(filter_less_eq(all_rows, -, 10), -)=10;add(1, 10)=11;eq(3, 11)=False", 
    "max(filter_less_eq(all_rows, -, 10), -)=10;add(1, 10)=11;greater(3, 11)=False", 
    "max(filter_less_eq(all_rows, -, 10), -)=10;add(3, 10)=13;less(1, 13);less(1, 13)=True", 
    "max(filter_less_eq(all_rows, -, 10), -)=10;add(3, 10)=13;eq(1, 13)=False", 
    "max(filter_less_eq(all_rows, -, 10), -)=10;add(3, 10)=13;greater(1, 13)=False", 
    "count(filter_less_eq(all_rows, -, 10))=10;diff(1, 10)=-9;less(3, -9);less(3, -9)=False", 
    "count(filter_less_eq(all_rows, -, 10))=10;diff(1, 10)=-9;eq(3, -9)=False", 
    "count(filter_less_eq(all_rows, -, 10))=10;diff(1, 10)=-9;greater(3, -9)=True", 
    "count(filter_less_eq(all_rows, -, 10))=10;diff(3, 10)=-7;less(1, -7);less(1, -7)=False", 
    "count(filter_less_eq(all_rows, -, 10))=10;diff(3, 10)=-7;eq(1, -7)=False", 
    "count(filter_less_eq(all_rows, -, 10))=10;diff(3, 10)=-7;greater(1, -7)=True", 
    "count(filter_less_eq(all_rows, -, 10))=10;add(1, 10)=11;less(3, 11);less(3, 11)=True", 
    "count(filter_less_eq(all_rows, -, 10))=10;add(1, 10)=11;eq(3, 11)=False", 
    "count(filter_less_eq(all_rows, -, 10))=10;add(1, 10)=11;greater(3, 11)=False", 
    "count(filter_less_eq(all_rows, -, 10))=10;add(3, 10)=13;less(1, 13);less(1, 13)=True", 
    "count(filter_less_eq(all_rows, -, 10))=10;add(3, 10)=13;eq(1, 13)=False", 
    "count(filter_less_eq(all_rows, -, 10))=10;add(3, 10)=13;greater(1, 13)=False"
  ]
]