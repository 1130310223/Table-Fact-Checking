[
  "2-1011065-3.html.csv", 
  "#france;[4, 1]# win less #silver;[0, 3]# and #bronze;[0, 4]# medal than every other listed country", 
  0, 
  [
    "all_eq(argmax(all_rows, silver), nation, france (fra))=True", 
    "all_eq(argmax(all_rows, bronze), nation, france (fra))=True", 
    "all_eq(argmin(all_rows, silver), nation, france (fra))=False", 
    "all_eq(argmin(all_rows, bronze), nation, france (fra))=False", 
    "hop(argmax(all_rows, silver), nation)=france (fra);eq(france (fra), france (fra))=True", 
    "hop(argmax(all_rows, bronze), nation)=france (fra);eq(france (fra), france (fra))=True", 
    "all_eq(filter_str_eq(all_rows, nation, france (fra)), nation, france (fra))=True", 
    "all_eq(argmax(argmin(all_rows, silver), silver), nation, france (fra))=False", 
    "all_eq(argmax(argmin(all_rows, silver), bronze), nation, france (fra))=False", 
    "all_eq(argmin(argmin(all_rows, silver), silver), nation, france (fra))=False", 
    "all_eq(argmin(argmin(all_rows, silver), bronze), nation, france (fra))=False", 
    "all_eq(argmax(argmin(all_rows, bronze), silver), nation, france (fra))=False", 
    "all_eq(argmax(argmin(all_rows, bronze), bronze), nation, france (fra))=False", 
    "all_eq(argmin(argmin(all_rows, bronze), silver), nation, france (fra))=False", 
    "all_eq(argmin(argmin(all_rows, bronze), bronze), nation, france (fra))=False", 
    "all_eq(filter_str_eq(argmax(all_rows, silver), nation, france (fra)), nation, france (fra))=True", 
    "all_eq(filter_str_eq(argmax(all_rows, bronze), nation, france (fra)), nation, france (fra))=True", 
    "and(all_eq(all_rows, nation, france (fra)), within(all_rows, nation, france (fra)))=False", 
    "hop(filter_str_eq(all_rows, nation, france (fra)), nation)=france (fra);eq(france (fra), france (fra))=True", 
    "count(all_rows)=21;count(filter_str_eq(all_rows, nation, france (fra)))=1;less(21, 1);less(21, 1)=False", 
    "count(all_rows)=21;count(filter_str_eq(all_rows, nation, france (fra)))=1;eq(21, 1)=False", 
    "count(all_rows)=21;count(filter_str_eq(all_rows, nation, france (fra)))=1;greater(21, 1)=True", 
    "hop(filter_str_eq(all_rows, nation, france (fra)), silver)=6;min(all_rows, silver)=0;less(6, 0);less(6, 0)=False", 
    "hop(filter_str_eq(all_rows, nation, france (fra)), silver)=6;min(all_rows, silver)=0;eq(6, 0)=False", 
    "hop(filter_str_eq(all_rows, nation, france (fra)), silver)=6;min(all_rows, silver)=0;greater(6, 0)=True", 
    "hop(filter_str_eq(all_rows, nation, france (fra)), silver)=6;max(all_rows, silver)=6;less(6, 6);less(6, 6)=False", 
    "hop(filter_str_eq(all_rows, nation, france (fra)), silver)=6;max(all_rows, silver)=6;eq(6, 6)=True", 
    "hop(filter_str_eq(all_rows, nation, france (fra)), silver)=6;max(all_rows, silver)=6;greater(6, 6)=False", 
    "hop(filter_str_eq(all_rows, nation, france (fra)), bronze)=5;min(all_rows, bronze)=0;less(5, 0);less(5, 0)=False", 
    "hop(filter_str_eq(all_rows, nation, france (fra)), bronze)=5;min(all_rows, bronze)=0;eq(5, 0)=False", 
    "hop(filter_str_eq(all_rows, nation, france (fra)), bronze)=5;min(all_rows, bronze)=0;greater(5, 0)=True", 
    "hop(filter_str_eq(all_rows, nation, france (fra)), bronze)=5;max(all_rows, bronze)=5;less(5, 5);less(5, 5)=False", 
    "hop(filter_str_eq(all_rows, nation, france (fra)), bronze)=5;max(all_rows, bronze)=5;eq(5, 5)=True", 
    "hop(filter_str_eq(all_rows, nation, france (fra)), bronze)=5;max(all_rows, bronze)=5;greater(5, 5)=False", 
    "and(all_eq(all_rows, nation, france (fra)), all_eq(argmax(all_rows, silver), nation, france (fra)))=False", 
    "and(all_eq(argmax(all_rows, silver), nation, france (fra)), within(all_rows, nation, france (fra)))=True", 
    "and(all_eq(argmax(all_rows, silver), nation, france (fra)), within(argmax(all_rows, silver), nation, france (fra)))=True", 
    "hop(filter_str_eq(argmax(all_rows, silver), nation, france (fra)), nation)=france (fra);eq(france (fra), france (fra))=True", 
    "count(argmax(all_rows, silver))=1;count(filter_str_eq(all_rows, nation, france (fra)))=1;less(1, 1);less(1, 1)=False", 
    "count(argmax(all_rows, silver))=1;count(filter_str_eq(all_rows, nation, france (fra)))=1;eq(1, 1)=True", 
    "count(argmax(all_rows, silver))=1;count(filter_str_eq(all_rows, nation, france (fra)))=1;greater(1, 1)=False", 
    "hop(argmax(all_rows, silver), nation)=france (fra);hop(filter_str_eq(all_rows, nation, france (fra)), nation)=france (fra);eq(france (fra), france (fra))=True", 
    "hop(argmax(all_rows, silver), silver)=6;hop(filter_str_eq(all_rows, nation, france (fra)), silver)=6;less(6, 6);less(6, 6)=False", 
    "hop(argmax(all_rows, silver), silver)=6;hop(filter_str_eq(all_rows, nation, france (fra)), silver)=6;eq(6, 6)=True", 
    "hop(argmax(all_rows, silver), silver)=6;hop(filter_str_eq(all_rows, nation, france (fra)), silver)=6;greater(6, 6)=False", 
    "hop(argmax(all_rows, silver), bronze)=5;hop(filter_str_eq(all_rows, nation, france (fra)), bronze)=5;less(5, 5);less(5, 5)=False", 
    "hop(argmax(all_rows, silver), bronze)=5;hop(filter_str_eq(all_rows, nation, france (fra)), bronze)=5;eq(5, 5)=True", 
    "hop(argmax(all_rows, silver), bronze)=5;hop(filter_str_eq(all_rows, nation, france (fra)), bronze)=5;greater(5, 5)=False", 
    "count(all_rows)=21;count(filter_str_eq(argmax(all_rows, silver), nation, france (fra)))=1;less(21, 1);less(21, 1)=False", 
    "count(all_rows)=21;count(filter_str_eq(argmax(all_rows, silver), nation, france (fra)))=1;eq(21, 1)=False", 
    "count(all_rows)=21;count(filter_str_eq(argmax(all_rows, silver), nation, france (fra)))=1;greater(21, 1)=True", 
    "count(argmax(all_rows, silver))=1;count(filter_str_eq(argmax(all_rows, silver), nation, france (fra)))=1;less(1, 1);less(1, 1)=False", 
    "count(argmax(all_rows, silver))=1;count(filter_str_eq(argmax(all_rows, silver), nation, france (fra)))=1;eq(1, 1)=True", 
    "count(argmax(all_rows, silver))=1;count(filter_str_eq(argmax(all_rows, silver), nation, france (fra)))=1;greater(1, 1)=False", 
    "hop(argmax(all_rows, silver), nation)=france (fra);hop(filter_str_eq(argmax(all_rows, silver), nation, france (fra)), nation)=france (fra);eq(france (fra), france (fra))=True", 
    "hop(argmax(all_rows, silver), silver)=6;hop(filter_str_eq(argmax(all_rows, silver), nation, france (fra)), silver)=6;less(6, 6);less(6, 6)=False", 
    "hop(argmax(all_rows, silver), silver)=6;hop(filter_str_eq(argmax(all_rows, silver), nation, france (fra)), silver)=6;eq(6, 6)=True", 
    "hop(argmax(all_rows, silver), silver)=6;hop(filter_str_eq(argmax(all_rows, silver), nation, france (fra)), silver)=6;greater(6, 6)=False", 
    "hop(argmax(all_rows, silver), bronze)=5;hop(filter_str_eq(argmax(all_rows, silver), nation, france (fra)), bronze)=5;less(5, 5);less(5, 5)=False", 
    "hop(argmax(all_rows, silver), bronze)=5;hop(filter_str_eq(argmax(all_rows, silver), nation, france (fra)), bronze)=5;eq(5, 5)=True", 
    "hop(argmax(all_rows, silver), bronze)=5;hop(filter_str_eq(argmax(all_rows, silver), nation, france (fra)), bronze)=5;greater(5, 5)=False", 
    "hop(filter_str_eq(argmax(all_rows, silver), nation, france (fra)), silver)=6;min(all_rows, silver)=0;less(6, 0);less(6, 0)=False", 
    "hop(filter_str_eq(argmax(all_rows, silver), nation, france (fra)), silver)=6;min(all_rows, silver)=0;eq(6, 0)=False", 
    "hop(filter_str_eq(argmax(all_rows, silver), nation, france (fra)), silver)=6;min(all_rows, silver)=0;greater(6, 0)=True", 
    "hop(filter_str_eq(argmax(all_rows, silver), nation, france (fra)), silver)=6;max(all_rows, silver)=6;less(6, 6);less(6, 6)=False", 
    "hop(filter_str_eq(argmax(all_rows, silver), nation, france (fra)), silver)=6;max(all_rows, silver)=6;eq(6, 6)=True", 
    "hop(filter_str_eq(argmax(all_rows, silver), nation, france (fra)), silver)=6;max(all_rows, silver)=6;greater(6, 6)=False", 
    "hop(filter_str_eq(argmax(all_rows, silver), nation, france (fra)), bronze)=5;min(all_rows, bronze)=0;less(5, 0);less(5, 0)=False", 
    "hop(filter_str_eq(argmax(all_rows, silver), nation, france (fra)), bronze)=5;min(all_rows, bronze)=0;eq(5, 0)=False", 
    "hop(filter_str_eq(argmax(all_rows, silver), nation, france (fra)), bronze)=5;min(all_rows, bronze)=0;greater(5, 0)=True", 
    "hop(filter_str_eq(argmax(all_rows, silver), nation, france (fra)), bronze)=5;max(all_rows, bronze)=5;less(5, 5);less(5, 5)=False", 
    "hop(filter_str_eq(argmax(all_rows, silver), nation, france (fra)), bronze)=5;max(all_rows, bronze)=5;eq(5, 5)=True", 
    "hop(filter_str_eq(argmax(all_rows, silver), nation, france (fra)), bronze)=5;max(all_rows, bronze)=5;greater(5, 5)=False", 
    "and(all_eq(all_rows, nation, france (fra)), all_eq(argmax(all_rows, bronze), nation, france (fra)))=False", 
    "and(all_eq(argmax(all_rows, bronze), nation, france (fra)), within(all_rows, nation, france (fra)))=True", 
    "and(all_eq(argmax(all_rows, bronze), nation, france (fra)), within(argmax(all_rows, bronze), nation, france (fra)))=True", 
    "hop(filter_str_eq(argmax(all_rows, bronze), nation, france (fra)), nation)=france (fra);eq(france (fra), france (fra))=True", 
    "count(argmax(all_rows, bronze))=1;count(filter_str_eq(all_rows, nation, france (fra)))=1;less(1, 1);less(1, 1)=False", 
    "count(argmax(all_rows, bronze))=1;count(filter_str_eq(all_rows, nation, france (fra)))=1;eq(1, 1)=True", 
    "count(argmax(all_rows, bronze))=1;count(filter_str_eq(all_rows, nation, france (fra)))=1;greater(1, 1)=False", 
    "hop(argmax(all_rows, bronze), nation)=france (fra);hop(filter_str_eq(all_rows, nation, france (fra)), nation)=france (fra);eq(france (fra), france (fra))=True", 
    "hop(argmax(all_rows, bronze), silver)=6;hop(filter_str_eq(all_rows, nation, france (fra)), silver)=6;less(6, 6);less(6, 6)=False", 
    "hop(argmax(all_rows, bronze), silver)=6;hop(filter_str_eq(all_rows, nation, france (fra)), silver)=6;eq(6, 6)=True", 
    "hop(argmax(all_rows, bronze), silver)=6;hop(filter_str_eq(all_rows, nation, france (fra)), silver)=6;greater(6, 6)=False", 
    "hop(argmax(all_rows, bronze), bronze)=5;hop(filter_str_eq(all_rows, nation, france (fra)), bronze)=5;less(5, 5);less(5, 5)=False", 
    "hop(argmax(all_rows, bronze), bronze)=5;hop(filter_str_eq(all_rows, nation, france (fra)), bronze)=5;eq(5, 5)=True", 
    "hop(argmax(all_rows, bronze), bronze)=5;hop(filter_str_eq(all_rows, nation, france (fra)), bronze)=5;greater(5, 5)=False", 
    "count(all_rows)=21;count(filter_str_eq(argmax(all_rows, bronze), nation, france (fra)))=1;less(21, 1);less(21, 1)=False", 
    "count(all_rows)=21;count(filter_str_eq(argmax(all_rows, bronze), nation, france (fra)))=1;eq(21, 1)=False", 
    "count(all_rows)=21;count(filter_str_eq(argmax(all_rows, bronze), nation, france (fra)))=1;greater(21, 1)=True", 
    "count(argmax(all_rows, bronze))=1;count(filter_str_eq(argmax(all_rows, bronze), nation, france (fra)))=1;less(1, 1);less(1, 1)=False", 
    "count(argmax(all_rows, bronze))=1;count(filter_str_eq(argmax(all_rows, bronze), nation, france (fra)))=1;eq(1, 1)=True", 
    "count(argmax(all_rows, bronze))=1;count(filter_str_eq(argmax(all_rows, bronze), nation, france (fra)))=1;greater(1, 1)=False", 
    "hop(argmax(all_rows, bronze), nation)=france (fra);hop(filter_str_eq(argmax(all_rows, bronze), nation, france (fra)), nation)=france (fra);eq(france (fra), france (fra))=True", 
    "hop(argmax(all_rows, bronze), silver)=6;hop(filter_str_eq(argmax(all_rows, bronze), nation, france (fra)), silver)=6;less(6, 6);less(6, 6)=False", 
    "hop(argmax(all_rows, bronze), silver)=6;hop(filter_str_eq(argmax(all_rows, bronze), nation, france (fra)), silver)=6;eq(6, 6)=True", 
    "hop(argmax(all_rows, bronze), silver)=6;hop(filter_str_eq(argmax(all_rows, bronze), nation, france (fra)), silver)=6;greater(6, 6)=False", 
    "hop(argmax(all_rows, bronze), bronze)=5;hop(filter_str_eq(argmax(all_rows, bronze), nation, france (fra)), bronze)=5;less(5, 5);less(5, 5)=False", 
    "hop(argmax(all_rows, bronze), bronze)=5;hop(filter_str_eq(argmax(all_rows, bronze), nation, france (fra)), bronze)=5;eq(5, 5)=True", 
    "hop(argmax(all_rows, bronze), bronze)=5;hop(filter_str_eq(argmax(all_rows, bronze), nation, france (fra)), bronze)=5;greater(5, 5)=False", 
    "hop(filter_str_eq(argmax(all_rows, bronze), nation, france (fra)), silver)=6;min(all_rows, silver)=0;less(6, 0);less(6, 0)=False", 
    "hop(filter_str_eq(argmax(all_rows, bronze), nation, france (fra)), silver)=6;min(all_rows, silver)=0;eq(6, 0)=False", 
    "hop(filter_str_eq(argmax(all_rows, bronze), nation, france (fra)), silver)=6;min(all_rows, silver)=0;greater(6, 0)=True", 
    "hop(filter_str_eq(argmax(all_rows, bronze), nation, france (fra)), silver)=6;max(all_rows, silver)=6;less(6, 6);less(6, 6)=False", 
    "hop(filter_str_eq(argmax(all_rows, bronze), nation, france (fra)), silver)=6;max(all_rows, silver)=6;eq(6, 6)=True", 
    "hop(filter_str_eq(argmax(all_rows, bronze), nation, france (fra)), silver)=6;max(all_rows, silver)=6;greater(6, 6)=False", 
    "hop(filter_str_eq(argmax(all_rows, bronze), nation, france (fra)), bronze)=5;min(all_rows, bronze)=0;less(5, 0);less(5, 0)=False", 
    "hop(filter_str_eq(argmax(all_rows, bronze), nation, france (fra)), bronze)=5;min(all_rows, bronze)=0;eq(5, 0)=False", 
    "hop(filter_str_eq(argmax(all_rows, bronze), nation, france (fra)), bronze)=5;min(all_rows, bronze)=0;greater(5, 0)=True", 
    "hop(filter_str_eq(argmax(all_rows, bronze), nation, france (fra)), bronze)=5;max(all_rows, bronze)=5;less(5, 5);less(5, 5)=False", 
    "hop(filter_str_eq(argmax(all_rows, bronze), nation, france (fra)), bronze)=5;max(all_rows, bronze)=5;eq(5, 5)=True", 
    "hop(filter_str_eq(argmax(all_rows, bronze), nation, france (fra)), bronze)=5;max(all_rows, bronze)=5;greater(5, 5)=False", 
    "and(all_eq(all_rows, nation, france (fra)), all_eq(argmin(all_rows, silver), nation, france (fra)))=False", 
    "and(all_eq(all_rows, nation, france (fra)), all_eq(argmin(all_rows, bronze), nation, france (fra)))=False", 
    "and(within(all_rows, nation, france (fra)), all_eq(argmin(all_rows, silver), nation, france (fra)))=False", 
    "and(within(all_rows, nation, france (fra)), all_eq(argmin(all_rows, bronze), nation, france (fra)))=False", 
    "and(all_eq(argmin(all_rows, silver), nation, france (fra)), within(argmin(all_rows, silver), nation, france (fra)))=False", 
    "and(all_eq(argmin(all_rows, bronze), nation, france (fra)), within(argmin(all_rows, bronze), nation, france (fra)))=False", 
    "count(filter_str_eq(all_rows, nation, france (fra)))=1;count(argmin(all_rows, silver))=8;less(1, 8);less(1, 8)=True", 
    "count(filter_str_eq(all_rows, nation, france (fra)))=1;count(argmin(all_rows, silver))=8;eq(1, 8)=False", 
    "count(filter_str_eq(all_rows, nation, france (fra)))=1;count(argmin(all_rows, silver))=8;greater(1, 8)=False", 
    "count(filter_str_eq(all_rows, nation, france (fra)))=1;count(argmin(all_rows, bronze))=7;less(1, 7);less(1, 7)=True", 
    "count(filter_str_eq(all_rows, nation, france (fra)))=1;count(argmin(all_rows, bronze))=7;eq(1, 7)=False", 
    "count(filter_str_eq(all_rows, nation, france (fra)))=1;count(argmin(all_rows, bronze))=7;greater(1, 7)=False", 
    "hop(filter_str_eq(all_rows, nation, france (fra)), silver)=6;min(argmin(all_rows, silver), silver)=0;less(6, 0);less(6, 0)=False", 
    "hop(filter_str_eq(all_rows, nation, france (fra)), silver)=6;min(argmin(all_rows, silver), silver)=0;eq(6, 0)=False", 
    "hop(filter_str_eq(all_rows, nation, france (fra)), silver)=6;min(argmin(all_rows, silver), silver)=0;greater(6, 0)=True", 
    "hop(filter_str_eq(all_rows, nation, france (fra)), silver)=6;max(argmin(all_rows, silver), silver)=0;less(6, 0);less(6, 0)=False", 
    "hop(filter_str_eq(all_rows, nation, france (fra)), silver)=6;max(argmin(all_rows, silver), silver)=0;eq(6, 0)=False", 
    "hop(filter_str_eq(all_rows, nation, france (fra)), silver)=6;max(argmin(all_rows, silver), silver)=0;greater(6, 0)=True", 
    "hop(filter_str_eq(all_rows, nation, france (fra)), bronze)=5;min(argmin(all_rows, silver), bronze)=0;less(5, 0);less(5, 0)=False", 
    "hop(filter_str_eq(all_rows, nation, france (fra)), bronze)=5;min(argmin(all_rows, silver), bronze)=0;eq(5, 0)=False", 
    "hop(filter_str_eq(all_rows, nation, france (fra)), bronze)=5;min(argmin(all_rows, silver), bronze)=0;greater(5, 0)=True", 
    "hop(filter_str_eq(all_rows, nation, france (fra)), bronze)=5;max(argmin(all_rows, silver), bronze)=1;less(5, 1);less(5, 1)=False", 
    "hop(filter_str_eq(all_rows, nation, france (fra)), bronze)=5;max(argmin(all_rows, silver), bronze)=1;eq(5, 1)=False", 
    "hop(filter_str_eq(all_rows, nation, france (fra)), bronze)=5;max(argmin(all_rows, silver), bronze)=1;greater(5, 1)=True", 
    "hop(filter_str_eq(all_rows, nation, france (fra)), silver)=6;min(argmin(all_rows, bronze), silver)=0;less(6, 0);less(6, 0)=False", 
    "hop(filter_str_eq(all_rows, nation, france (fra)), silver)=6;min(argmin(all_rows, bronze), silver)=0;eq(6, 0)=False", 
    "hop(filter_str_eq(all_rows, nation, france (fra)), silver)=6;min(argmin(all_rows, bronze), silver)=0;greater(6, 0)=True", 
    "hop(filter_str_eq(all_rows, nation, france (fra)), silver)=6;max(argmin(all_rows, bronze), silver)=2;less(6, 2);less(6, 2)=False", 
    "hop(filter_str_eq(all_rows, nation, france (fra)), silver)=6;max(argmin(all_rows, bronze), silver)=2;eq(6, 2)=False", 
    "hop(filter_str_eq(all_rows, nation, france (fra)), silver)=6;max(argmin(all_rows, bronze), silver)=2;greater(6, 2)=True", 
    "hop(filter_str_eq(all_rows, nation, france (fra)), bronze)=5;min(argmin(all_rows, bronze), bronze)=0;less(5, 0);less(5, 0)=False", 
    "hop(filter_str_eq(all_rows, nation, france (fra)), bronze)=5;min(argmin(all_rows, bronze), bronze)=0;eq(5, 0)=False", 
    "hop(filter_str_eq(all_rows, nation, france (fra)), bronze)=5;min(argmin(all_rows, bronze), bronze)=0;greater(5, 0)=True", 
    "hop(filter_str_eq(all_rows, nation, france (fra)), bronze)=5;max(argmin(all_rows, bronze), bronze)=0;less(5, 0);less(5, 0)=False", 
    "hop(filter_str_eq(all_rows, nation, france (fra)), bronze)=5;max(argmin(all_rows, bronze), bronze)=0;eq(5, 0)=False", 
    "hop(filter_str_eq(all_rows, nation, france (fra)), bronze)=5;max(argmin(all_rows, bronze), bronze)=0;greater(5, 0)=True"
  ]
]