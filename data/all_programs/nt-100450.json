[
  "2-1507170-1.html.csv", 
  "justin leonard on more than 4 occasion #win;[0, 2]# a #tournament;[0, 1]# by only 1 #stroke;[7, 3]#", 
  0, 
  [
    "diff(4, 1)=3;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;less(3, 4);less(3, 4)=True", 
    "diff(4, 1)=3;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;eq(3, 4)=False", 
    "diff(4, 1)=3;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;greater(3, 4)=False", 
    "count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;diff(4, 4)=0;less(1, 0);less(1, 0)=False", 
    "count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;diff(4, 4)=0;eq(1, 0)=False", 
    "count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;diff(4, 4)=0;greater(1, 0)=True", 
    "count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;diff(1, 4)=-3;less(4, -3);less(4, -3)=False", 
    "count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;diff(1, 4)=-3;eq(4, -3)=False", 
    "count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;diff(1, 4)=-3;greater(4, -3)=True", 
    "less(4, 1);count(all_rows)=12;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;less(12, 4);and(less(4, 1), less(12, 4))=False", 
    "less(4, 1);count(all_rows)=12;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;and(less(4, 1), eq(12, 4))=False", 
    "less(4, 1);count(all_rows)=12;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;and(less(4, 1), greater(12, 4))=False", 
    "diff(4, 1)=3;count(all_rows)=12;diff(3, 12)=-9;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;less(-9, 4);less(-9, 4)=True", 
    "diff(4, 1)=3;count(all_rows)=12;diff(3, 12)=-9;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;eq(-9, 4)=False", 
    "diff(4, 1)=3;count(all_rows)=12;diff(3, 12)=-9;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;greater(-9, 4)=False", 
    "diff(4, 1)=3;count(all_rows)=12;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;diff(3, 4)=-1;less(12, -1);less(12, -1)=False", 
    "diff(4, 1)=3;count(all_rows)=12;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;diff(3, 4)=-1;eq(12, -1)=False", 
    "diff(4, 1)=3;count(all_rows)=12;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;diff(3, 4)=-1;greater(12, -1)=True", 
    "diff(4, 1)=3;count(all_rows)=12;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;diff(12, 4)=8;less(3, 8);less(3, 8)=True", 
    "diff(4, 1)=3;count(all_rows)=12;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;diff(12, 4)=8;eq(3, 8)=False", 
    "diff(4, 1)=3;count(all_rows)=12;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;diff(12, 4)=8;greater(3, 8)=False", 
    "count(all_rows)=12;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;less(12, 4);and(eq(4, 1), less(12, 4))=False", 
    "count(all_rows)=12;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;and(eq(4, 1), eq(12, 4))=False", 
    "count(all_rows)=12;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;and(eq(4, 1), greater(12, 4))=False", 
    "count(all_rows)=12;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;less(12, 4);and(greater(4, 1), less(12, 4))=False", 
    "count(all_rows)=12;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;and(greater(4, 1), eq(12, 4))=False", 
    "count(all_rows)=12;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;and(greater(4, 1), greater(12, 4))=True", 
    "count(all_rows)=12;less(4, 12);count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;less(1, 4);and(less(4, 12), less(1, 4))=True", 
    "count(all_rows)=12;less(4, 12);count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;and(less(4, 12), eq(1, 4))=False", 
    "count(all_rows)=12;less(4, 12);count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;and(less(4, 12), greater(1, 4))=False", 
    "count(all_rows)=12;less(1, 12);count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;less(4, 4);and(less(1, 12), less(4, 4))=False", 
    "count(all_rows)=12;less(1, 12);count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;and(less(1, 12), eq(4, 4))=True", 
    "count(all_rows)=12;less(1, 12);count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;and(less(1, 12), greater(4, 4))=False", 
    "count(all_rows)=12;diff(4, 12)=-8;diff(1, -8)=9;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;less(9, 4);less(9, 4)=False", 
    "count(all_rows)=12;diff(4, 12)=-8;diff(1, -8)=9;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;eq(9, 4)=False", 
    "count(all_rows)=12;diff(4, 12)=-8;diff(1, -8)=9;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;greater(9, 4)=True", 
    "count(all_rows)=12;diff(4, 12)=-8;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;diff(1, 4)=-3;less(-8, -3);less(-8, -3)=True", 
    "count(all_rows)=12;diff(4, 12)=-8;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;diff(1, 4)=-3;eq(-8, -3)=False", 
    "count(all_rows)=12;diff(4, 12)=-8;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;diff(1, 4)=-3;greater(-8, -3)=False", 
    "count(all_rows)=12;diff(4, 12)=-8;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;diff(-8, 4)=-12;less(1, -12);less(1, -12)=False", 
    "count(all_rows)=12;diff(4, 12)=-8;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;diff(-8, 4)=-12;eq(1, -12)=False", 
    "count(all_rows)=12;diff(4, 12)=-8;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;diff(-8, 4)=-12;greater(1, -12)=True", 
    "count(all_rows)=12;diff(1, 12)=-11;diff(4, -11)=15;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;less(15, 4);less(15, 4)=False", 
    "count(all_rows)=12;diff(1, 12)=-11;diff(4, -11)=15;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;eq(15, 4)=False", 
    "count(all_rows)=12;diff(1, 12)=-11;diff(4, -11)=15;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;greater(15, 4)=True", 
    "count(all_rows)=12;diff(1, 12)=-11;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;diff(4, 4)=0;less(-11, 0);less(-11, 0)=True", 
    "count(all_rows)=12;diff(1, 12)=-11;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;diff(4, 4)=0;eq(-11, 0)=False", 
    "count(all_rows)=12;diff(1, 12)=-11;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;diff(4, 4)=0;greater(-11, 0)=False", 
    "count(all_rows)=12;diff(1, 12)=-11;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;diff(-11, 4)=-15;less(4, -15);less(4, -15)=False", 
    "count(all_rows)=12;diff(1, 12)=-11;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;diff(-11, 4)=-15;eq(4, -15)=False", 
    "count(all_rows)=12;diff(1, 12)=-11;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;diff(-11, 4)=-15;greater(4, -15)=True", 
    "count(all_rows)=12;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;less(1, 4);and(eq(4, 12), less(1, 4))=False", 
    "count(all_rows)=12;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;and(eq(4, 12), eq(1, 4))=False", 
    "count(all_rows)=12;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;and(eq(4, 12), greater(1, 4))=False", 
    "count(all_rows)=12;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;less(4, 4);and(eq(1, 12), less(4, 4))=False", 
    "count(all_rows)=12;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;and(eq(1, 12), eq(4, 4))=False", 
    "count(all_rows)=12;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;and(eq(1, 12), greater(4, 4))=False", 
    "count(all_rows)=12;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;less(1, 4);and(greater(4, 12), less(1, 4))=False", 
    "count(all_rows)=12;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;and(greater(4, 12), eq(1, 4))=False", 
    "count(all_rows)=12;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;and(greater(4, 12), greater(1, 4))=False", 
    "count(all_rows)=12;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;less(4, 4);and(greater(1, 12), less(4, 4))=False", 
    "count(all_rows)=12;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;and(greater(1, 12), eq(4, 4))=False", 
    "count(all_rows)=12;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;and(greater(1, 12), greater(4, 4))=False", 
    "count(all_rows)=12;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;diff(4, 4)=0;diff(1, 0)=1;less(12, 1);less(12, 1)=False", 
    "count(all_rows)=12;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;diff(4, 4)=0;diff(1, 0)=1;eq(12, 1)=False", 
    "count(all_rows)=12;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;diff(4, 4)=0;diff(1, 0)=1;greater(12, 1)=True", 
    "count(all_rows)=12;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;diff(4, 4)=0;diff(12, 0)=12;less(1, 12);less(1, 12)=True", 
    "count(all_rows)=12;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;diff(4, 4)=0;diff(12, 0)=12;eq(1, 12)=False", 
    "count(all_rows)=12;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;diff(4, 4)=0;diff(12, 0)=12;greater(1, 12)=False", 
    "count(all_rows)=12;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;diff(1, 4)=-3;diff(4, -3)=7;less(12, 7);less(12, 7)=False", 
    "count(all_rows)=12;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;diff(1, 4)=-3;diff(4, -3)=7;eq(12, 7)=False", 
    "count(all_rows)=12;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;diff(1, 4)=-3;diff(4, -3)=7;greater(12, 7)=True", 
    "count(all_rows)=12;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;diff(1, 4)=-3;diff(12, -3)=15;less(4, 15);less(4, 15)=True", 
    "count(all_rows)=12;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;diff(1, 4)=-3;diff(12, -3)=15;eq(4, 15)=False", 
    "count(all_rows)=12;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;diff(1, 4)=-3;diff(12, -3)=15;greater(4, 15)=False", 
    "count(all_rows)=12;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;diff(12, 4)=8;diff(4, 8)=-4;less(1, -4);less(1, -4)=False", 
    "count(all_rows)=12;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;diff(12, 4)=8;diff(4, 8)=-4;eq(1, -4)=False", 
    "count(all_rows)=12;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;diff(12, 4)=8;diff(4, 8)=-4;greater(1, -4)=True", 
    "count(all_rows)=12;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;diff(12, 4)=8;diff(1, 8)=-7;less(4, -7);less(4, -7)=False", 
    "count(all_rows)=12;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;diff(12, 4)=8;diff(1, 8)=-7;eq(4, -7)=False", 
    "count(all_rows)=12;count(filter_str_eq(all_rows, margin of victory, 1 stroke))=4;diff(12, 4)=8;diff(1, 8)=-7;greater(4, -7)=True"
  ]
]